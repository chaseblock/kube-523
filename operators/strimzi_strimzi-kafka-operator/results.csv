Trial number,Testcase,Alarm,Crash,Health,Operator log,Consistency,Differential,Custom
00a3604d99bf9df4efc3f3a24a8045c4/0000,00a3604d99bf9df4efc3f3a24a8045c4,False,,,,,testrun-strimzi-new/trial-06-0004/0004 -> 00a3604d99bf9df4efc3f3a24a8045c4/0000: failed attempt recovering to seed state - system state diff,
02418bca286898a4da233bf8c731e4d5/0000,02418bca286898a4da233bf8c731e4d5,False,,,,,testrun-strimzi-new/trial-02-0008/0002 -> 02418bca286898a4da233bf8c731e4d5/0000: failed attempt recovering to seed state - system state diff,
034c148d43ed37b5ac8c902bb9aaefa7/0000,034c148d43ed37b5ac8c902bb9aaefa7,False,,,,,testrun-strimzi-new/trial-00-0000/0003 -> 034c148d43ed37b5ac8c902bb9aaefa7/0000: failed attempt recovering to seed state - system state diff,
04b5ef1dae170fac965c8d8cf1fdf008/0000,04b5ef1dae170fac965c8d8cf1fdf008,False,,,,,testrun-strimzi-new/trial-05-0010/0002 -> 04b5ef1dae170fac965c8d8cf1fdf008/0000: failed attempt recovering to seed state - system state diff,
04fdcb833bc548d9acf2c199c91a0d2b/0000,04fdcb833bc548d9acf2c199c91a0d2b,False,,,,,testrun-strimzi-new/trial-06-0011/0004 -> 04fdcb833bc548d9acf2c199c91a0d2b/0000: failed attempt recovering to seed state - system state diff,
052a11ce4d26c21979d5d7e3266a49bd/0000,052a11ce4d26c21979d5d7e3266a49bd,False,,,,,testrun-strimzi-new/trial-02-0028/0004 -> 052a11ce4d26c21979d5d7e3266a49bd/0000: failed attempt recovering to seed state - system state diff,
0588c72862b3b30a037f57293993bb99/0000,0588c72862b3b30a037f57293993bb99,False,,,,,testrun-strimzi-new/trial-02-0047/0004 -> 0588c72862b3b30a037f57293993bb99/0000: failed attempt recovering to seed state - system state diff,
060b71da9c7d507652b0da3732a77f73/0000,060b71da9c7d507652b0da3732a77f73,False,,,,,testrun-strimzi-new/trial-06-0011/0006 -> 060b71da9c7d507652b0da3732a77f73/0000: failed attempt recovering to seed state - system state diff,
0be52ac79220ad61c1642afc6202baa3/0000,0be52ac79220ad61c1642afc6202baa3,False,,,,,testrun-strimzi-new/trial-05-0026/0004 -> 0be52ac79220ad61c1642afc6202baa3/0000: failed attempt recovering to seed state - system state diff,
1ab6173db71b9d22fb95e1e574b15cb0/0000,1ab6173db71b9d22fb95e1e574b15cb0,False,,,,,testrun-strimzi-new/trial-03-0010/0010 -> 1ab6173db71b9d22fb95e1e574b15cb0/0000: failed attempt recovering to seed state - system state diff,
213a94598fc44230d7e9b906012fbe81/0000,213a94598fc44230d7e9b906012fbe81,False,,,,,testrun-strimzi-new/trial-02-0057/0002 -> 213a94598fc44230d7e9b906012fbe81/0000: failed attempt recovering to seed state - system state diff,
23cca84eac4d32d090d36a4ca91ea503/0000,23cca84eac4d32d090d36a4ca91ea503,False,,,,,testrun-strimzi-new/trial-03-0010/0007 -> 23cca84eac4d32d090d36a4ca91ea503/0000: failed attempt recovering to seed state - system state diff,
26ac54dae97aac06bcd7c6b0e6e99b4a/0000,26ac54dae97aac06bcd7c6b0e6e99b4a,False,,,,,testrun-strimzi-new/trial-05-0027/0004 -> 26ac54dae97aac06bcd7c6b0e6e99b4a/0000: failed attempt recovering to seed state - system state diff,
27099119650c348453e89a307808e5dd/0000,27099119650c348453e89a307808e5dd,False,,,,,testrun-strimzi-new/trial-03-0010/0009 -> 27099119650c348453e89a307808e5dd/0000: failed attempt recovering to seed state - system state diff,
2afc79b74cf77f7741182a95e215a153/0000,2afc79b74cf77f7741182a95e215a153,False,,,,,testrun-strimzi-new/trial-05-0030/0002 -> 2afc79b74cf77f7741182a95e215a153/0000: failed attempt recovering to seed state - system state diff,
2b493e7f0670b0d3be0d7c99da7e04fa/0000,2b493e7f0670b0d3be0d7c99da7e04fa,False,,,,,testrun-strimzi-new/trial-02-0047/0007 -> 2b493e7f0670b0d3be0d7c99da7e04fa/0000: failed attempt recovering to seed state - system state diff,
2da579a351b246bbf1a31dde43bea29c/0000,2da579a351b246bbf1a31dde43bea29c,False,,,,,testrun-strimzi-new/trial-05-0015/0002 -> 2da579a351b246bbf1a31dde43bea29c/0000: failed attempt recovering to seed state - system state diff,
2e08a241075393b781a1b2226a76ea6c/0000,2e08a241075393b781a1b2226a76ea6c,False,,,,,testrun-strimzi-new/trial-06-0004/0002 -> 2e08a241075393b781a1b2226a76ea6c/0000: failed attempt recovering to seed state - system state diff,
2e3b7c732f98b4fb46f8ff41d4adf75e/0000,2e3b7c732f98b4fb46f8ff41d4adf75e,False,,,,,testrun-strimzi-new/trial-05-0015/0003 -> 2e3b7c732f98b4fb46f8ff41d4adf75e/0000: failed attempt recovering to seed state - system state diff,
2e7128dbf4f89b330af0d5c9c1fec7b0/0000,2e7128dbf4f89b330af0d5c9c1fec7b0,False,,,,,testrun-strimzi-new/trial-06-0034/0002 -> 2e7128dbf4f89b330af0d5c9c1fec7b0/0000: failed attempt recovering to seed state - system state diff,
2fa44b0349193931d2dc5aa567c5b579/0000,2fa44b0349193931d2dc5aa567c5b579,False,,,,,testrun-strimzi-new/trial-00-0003/0005 -> 2fa44b0349193931d2dc5aa567c5b579/0000: failed attempt recovering to seed state - system state diff,
31642048ba48ade0924aa3e1cca8fb40/0000,31642048ba48ade0924aa3e1cca8fb40,False,,,,,testrun-strimzi-new/trial-05-0029/0008 -> 31642048ba48ade0924aa3e1cca8fb40/0000: failed attempt recovering to seed state - system state diff,
34730841b3656ee2b5dea122666ae61b/0000,34730841b3656ee2b5dea122666ae61b,False,,,,,testrun-strimzi-new/trial-05-0029/0002 -> 34730841b3656ee2b5dea122666ae61b/0000: failed attempt recovering to seed state - system state diff,
347ae83d6c0008ef1c1e120798f0d68d/0000,347ae83d6c0008ef1c1e120798f0d68d,False,,,,,testrun-strimzi-new/trial-05-0028/0002 -> 347ae83d6c0008ef1c1e120798f0d68d/0000: failed attempt recovering to seed state - system state diff,
350e89a518decef6cc8f63b31a1cc51d/0000,350e89a518decef6cc8f63b31a1cc51d,False,,,,,testrun-strimzi-new/trial-02-0047/0002 -> 350e89a518decef6cc8f63b31a1cc51d/0000: failed attempt recovering to seed state - system state diff,
3772fc8084d6369d7a14c4f4bd787d6f/0000,3772fc8084d6369d7a14c4f4bd787d6f,False,,,,,testrun-strimzi-new/trial-02-0053/0010 -> 3772fc8084d6369d7a14c4f4bd787d6f/0000: failed attempt recovering to seed state - system state diff,
40cb6d6ddcd362610427ca8aae7b21a8/0000,40cb6d6ddcd362610427ca8aae7b21a8,False,,,,,testrun-strimzi-new/trial-06-0040/0001 -> 40cb6d6ddcd362610427ca8aae7b21a8/0000: failed attempt recovering to seed state - system state diff,
41c632654070a1590bca0ef062f036e2/0000,41c632654070a1590bca0ef062f036e2,False,,,,,testrun-strimzi-new/trial-04-0005/0005 -> 41c632654070a1590bca0ef062f036e2/0000: failed attempt recovering to seed state - system state diff,
42f47f4296fabeeaa6347fdc4bd66e62/0000,42f47f4296fabeeaa6347fdc4bd66e62,False,,,,,testrun-strimzi-new/trial-02-0056/0002 -> 42f47f4296fabeeaa6347fdc4bd66e62/0000: failed attempt recovering to seed state - system state diff,
46f0f2338d023c957caff5da40fd0ad2/0000,46f0f2338d023c957caff5da40fd0ad2,False,,,,,testrun-strimzi-new/trial-05-0002/0008 -> 46f0f2338d023c957caff5da40fd0ad2/0000: failed attempt recovering to seed state - system state diff,
4a638e9579e1687cfc76c1b30ae5253a/0000,4a638e9579e1687cfc76c1b30ae5253a,False,,,,,testrun-strimzi-new/trial-03-0015/0002 -> 4a638e9579e1687cfc76c1b30ae5253a/0000: failed attempt recovering to seed state - system state diff,
4c0a7f2659632e9042f5372d2c8acaad/0000,4c0a7f2659632e9042f5372d2c8acaad,False,,,,,testrun-strimzi-new/trial-02-0040/0002 -> 4c0a7f2659632e9042f5372d2c8acaad/0000: failed attempt recovering to seed state - system state diff,
4c66ff684650f48633a14455cfb512cc/0000,4c66ff684650f48633a14455cfb512cc,False,,,,,testrun-strimzi-new/trial-06-0028/0003 -> 4c66ff684650f48633a14455cfb512cc/0000: failed attempt recovering to seed state - system state diff,
4cf004a019134fb2b2cbd8852d8172ea/0000,4cf004a019134fb2b2cbd8852d8172ea,False,,,,,testrun-strimzi-new/trial-02-0001/0002 -> 4cf004a019134fb2b2cbd8852d8172ea/0000: failed attempt recovering to seed state - system state diff,
51922f2fe0018f6db0891c9c4ec84d2d/0000,51922f2fe0018f6db0891c9c4ec84d2d,False,,,,,testrun-strimzi-new/trial-02-0039/0004 -> 51922f2fe0018f6db0891c9c4ec84d2d/0000: failed attempt recovering to seed state - system state diff,
5194a79ec255cc39e521df7d9b17556f/0000,5194a79ec255cc39e521df7d9b17556f,False,,,,,testrun-strimzi-new/trial-02-0019/0002 -> 5194a79ec255cc39e521df7d9b17556f/0000: failed attempt recovering to seed state - system state diff,
5201a30b256ce2ba81dc750acedfaf73/0000,5201a30b256ce2ba81dc750acedfaf73,False,,,,,testrun-strimzi-new/trial-03-0012/0004 -> 5201a30b256ce2ba81dc750acedfaf73/0000: failed attempt recovering to seed state - system state diff,
549c08aa6b605bc875c3213e533860f5/0000,549c08aa6b605bc875c3213e533860f5,False,,,,,testrun-strimzi-new/trial-00-0001/0002 -> 549c08aa6b605bc875c3213e533860f5/0000: failed attempt recovering to seed state - system state diff,
54e3551a7586acafbde4f4964b231350/0000,54e3551a7586acafbde4f4964b231350,False,,,,,testrun-strimzi-new/trial-05-0039/0004 -> 54e3551a7586acafbde4f4964b231350/0000: failed attempt recovering to seed state - system state diff,
58b26d6990d1cb16e988bf609739067d/0000,58b26d6990d1cb16e988bf609739067d,False,,,,,testrun-strimzi-new/trial-06-0040/0002 -> 58b26d6990d1cb16e988bf609739067d/0000: failed attempt recovering to seed state - system state diff,
5909c2394800dd702cfddcec687e8765/0000,5909c2394800dd702cfddcec687e8765,False,,,,,testrun-strimzi-new/trial-02-0047/0003 -> 5909c2394800dd702cfddcec687e8765/0000: failed attempt recovering to seed state - system state diff,
5932efa1e6b1c4e4aa9dc88b7ff081d7/0000,5932efa1e6b1c4e4aa9dc88b7ff081d7,False,,,,,testrun-strimzi-new/trial-06-0034/0005 -> 5932efa1e6b1c4e4aa9dc88b7ff081d7/0000: failed attempt recovering to seed state - system state diff,
5a14ffc4f2d95c3f26ab7fdac4c6878e/0000,5a14ffc4f2d95c3f26ab7fdac4c6878e,False,,,,,testrun-strimzi-new/trial-05-0017/0002 -> 5a14ffc4f2d95c3f26ab7fdac4c6878e/0000: failed attempt recovering to seed state - system state diff,
5dfa78015a2e3f9bb42990526436f952/0000,5dfa78015a2e3f9bb42990526436f952,False,,,,,testrun-strimzi-new/trial-05-0054/0001 -> 5dfa78015a2e3f9bb42990526436f952/0000: failed attempt recovering to seed state - system state diff,
5f8061334f937b954e0bd29ba2fed190/0000,5f8061334f937b954e0bd29ba2fed190,False,,,,,testrun-strimzi-new/trial-06-0027/0004 -> 5f8061334f937b954e0bd29ba2fed190/0000: failed attempt recovering to seed state - system state diff,
5fb7f01fdcb43d5bab791b6413f50106/0000,5fb7f01fdcb43d5bab791b6413f50106,False,,,,,testrun-strimzi-new/trial-05-0002/0001 -> 5fb7f01fdcb43d5bab791b6413f50106/0000: failed attempt recovering to seed state - system state diff,
644efb8b54270abdc5db492b145296d1/0000,644efb8b54270abdc5db492b145296d1,False,,,,,testrun-strimzi-new/trial-06-0040/0003 -> 644efb8b54270abdc5db492b145296d1/0000: failed attempt recovering to seed state - system state diff,
69b47a13517d0c7a2b57298846206c7f/0000,69b47a13517d0c7a2b57298846206c7f,False,,,,,testrun-strimzi-new/trial-05-0033/0002 -> 69b47a13517d0c7a2b57298846206c7f/0000: failed attempt recovering to seed state - system state diff,
6c5c5cbc0d4fc3394c1e7e7067404e95/0000,6c5c5cbc0d4fc3394c1e7e7067404e95,False,,,,,testrun-strimzi-new/trial-05-0029/0007 -> 6c5c5cbc0d4fc3394c1e7e7067404e95/0000: failed attempt recovering to seed state - system state diff,
6e124e64375e667e7f1222b79e4a040f/0000,6e124e64375e667e7f1222b79e4a040f,False,,,,,testrun-strimzi-new/trial-07-0001/0002 -> 6e124e64375e667e7f1222b79e4a040f/0000: failed attempt recovering to seed state - system state diff,
6e6cf5066dc9457400fbb0a0305c8275/0000,6e6cf5066dc9457400fbb0a0305c8275,False,,,,,testrun-strimzi-new/trial-02-0006/0002 -> 6e6cf5066dc9457400fbb0a0305c8275/0000: failed attempt recovering to seed state - system state diff,
6f01abc8432d3e7026db23177f1818c8/0000,6f01abc8432d3e7026db23177f1818c8,False,,,,,testrun-strimzi-new/trial-02-0001/0005 -> 6f01abc8432d3e7026db23177f1818c8/0000: failed attempt recovering to seed state - system state diff,
6f82530d6bffcee6c832de57e2ce1df3/0000,6f82530d6bffcee6c832de57e2ce1df3,False,,,,,testrun-strimzi-new/trial-07-0007/0005 -> 6f82530d6bffcee6c832de57e2ce1df3/0000: failed attempt recovering to seed state - system state diff,
71e6178e47b9d40469fdd7495188c25b/0000,71e6178e47b9d40469fdd7495188c25b,False,,,,,testrun-strimzi-new/trial-02-0047/0009 -> 71e6178e47b9d40469fdd7495188c25b/0000: failed attempt recovering to seed state - system state diff,
751b69baf3a0579843af329138a98047/0000,751b69baf3a0579843af329138a98047,False,,,,,testrun-strimzi-new/trial-02-0004/0001 -> 751b69baf3a0579843af329138a98047/0000: failed attempt recovering to seed state - system state diff,
75953353b7e89c6348f19ada1adfd9fb/0000,75953353b7e89c6348f19ada1adfd9fb,False,,,,,testrun-strimzi-new/trial-05-0006/0003 -> 75953353b7e89c6348f19ada1adfd9fb/0000: failed attempt recovering to seed state - system state diff,
763d58dd6dd0cedabc89b38f510bc6e6/0000,763d58dd6dd0cedabc89b38f510bc6e6,False,,,,,testrun-strimzi-new/trial-00-0003/0009 -> 763d58dd6dd0cedabc89b38f510bc6e6/0000: failed attempt recovering to seed state - system state diff,
76df4d8c9b463001f65280df856bc742/0000,76df4d8c9b463001f65280df856bc742,False,,,,,testrun-strimzi-new/trial-03-0003/0005 -> 76df4d8c9b463001f65280df856bc742/0000: failed attempt recovering to seed state - system state diff,
80c2f76e1df8ae7959befe667d52ede6/0000,80c2f76e1df8ae7959befe667d52ede6,False,,,,,testrun-strimzi-new/trial-03-0002/0002 -> 80c2f76e1df8ae7959befe667d52ede6/0000: failed attempt recovering to seed state - system state diff,
8a374d4f291ff000f5a84eeaa7213847/0000,8a374d4f291ff000f5a84eeaa7213847,False,,,,,testrun-strimzi-new/trial-04-0001/0008 -> 8a374d4f291ff000f5a84eeaa7213847/0000: failed attempt recovering to seed state - system state diff,
8c6ac2b00061208c9074eb5fc6681712/0000,8c6ac2b00061208c9074eb5fc6681712,False,,,,,testrun-strimzi-new/trial-05-0028/0003 -> 8c6ac2b00061208c9074eb5fc6681712/0000: failed attempt recovering to seed state - system state diff,
8cd8d6190587d909f5fe5272b8423d96/0000,8cd8d6190587d909f5fe5272b8423d96,False,,,,,testrun-strimzi-new/trial-00-0026/0003 -> 8cd8d6190587d909f5fe5272b8423d96/0000: failed attempt recovering to seed state - system state diff,
98d878dd033d090430bec952c6177f41/0000,98d878dd033d090430bec952c6177f41,False,,,,,testrun-strimzi-new/trial-00-0003/0006 -> 98d878dd033d090430bec952c6177f41/0000: failed attempt recovering to seed state - system state diff,
991ff634d3e0d7f65276c6d5e8d81fb0/0000,991ff634d3e0d7f65276c6d5e8d81fb0,False,,,,,testrun-strimzi-new/trial-07-0007/0002 -> 991ff634d3e0d7f65276c6d5e8d81fb0/0000: failed attempt recovering to seed state - system state diff,
9b8a1e8dec1341fce1c5d61276db45ee/0000,9b8a1e8dec1341fce1c5d61276db45ee,False,,,,,testrun-strimzi-new/trial-06-0045/0010 -> 9b8a1e8dec1341fce1c5d61276db45ee/0000: failed attempt recovering to seed state - system state diff,
9ba52351cc0cce745ef67ec34c246617/0000,9ba52351cc0cce745ef67ec34c246617,False,,,,,testrun-strimzi-new/trial-06-0029/0003 -> 9ba52351cc0cce745ef67ec34c246617/0000: failed attempt recovering to seed state - system state diff,
9c000245e7e4ea2115613842e68f9da5/0000,9c000245e7e4ea2115613842e68f9da5,False,,,,,testrun-strimzi-new/trial-03-0010/0006 -> 9c000245e7e4ea2115613842e68f9da5/0000: failed attempt recovering to seed state - system state diff,
9fd6a34a03d14aaf000cb8eba709efbe/0000,9fd6a34a03d14aaf000cb8eba709efbe,False,,,,,testrun-strimzi-new/trial-06-0011/0002 -> 9fd6a34a03d14aaf000cb8eba709efbe/0000: failed attempt recovering to seed state - system state diff,
a4def4f234f59b6782ca4153ffb2e67c/0000,a4def4f234f59b6782ca4153ffb2e67c,False,,,,,testrun-strimzi-new/trial-02-0001/0006 -> a4def4f234f59b6782ca4153ffb2e67c/0000: failed attempt recovering to seed state - system state diff,
ad83aa7ff3663dcce9d95f5a76ae6f90/0000,ad83aa7ff3663dcce9d95f5a76ae6f90,False,,,,,testrun-strimzi-new/trial-03-0014/0003 -> ad83aa7ff3663dcce9d95f5a76ae6f90/0000: failed attempt recovering to seed state - system state diff,
ad83dd74c4c2e9cbe50eb33207303039/0000,ad83dd74c4c2e9cbe50eb33207303039,False,,,,,testrun-strimzi-new/trial-06-0030/0002 -> ad83dd74c4c2e9cbe50eb33207303039/0000: failed attempt recovering to seed state - system state diff,
ae6958354c34c4b9080a4f466dc931ed/0000,ae6958354c34c4b9080a4f466dc931ed,False,,,,,testrun-strimzi-new/trial-06-0045/0006 -> ae6958354c34c4b9080a4f466dc931ed/0000: failed attempt recovering to seed state - system state diff,
afde5d8fa876d6c66688f43c8fccf370/0000,afde5d8fa876d6c66688f43c8fccf370,False,,,,,testrun-strimzi-new/trial-05-0009/0002 -> afde5d8fa876d6c66688f43c8fccf370/0000: failed attempt recovering to seed state - system state diff,
b0a28b99b0bdc3665a71b22100517419/0000,b0a28b99b0bdc3665a71b22100517419,False,,,,,testrun-strimzi-new/trial-03-0023/0002 -> b0a28b99b0bdc3665a71b22100517419/0000: failed attempt recovering to seed state - system state diff,
b1f0a7fc9a3b276d1cbbf3f65e509bfe/0000,b1f0a7fc9a3b276d1cbbf3f65e509bfe,False,,,,,testrun-strimzi-new/trial-05-0017/0005 -> b1f0a7fc9a3b276d1cbbf3f65e509bfe/0000: failed attempt recovering to seed state - system state diff,
b357bfc658e2ce22d232c5495f4a94f5/0000,b357bfc658e2ce22d232c5495f4a94f5,False,,,,,testrun-strimzi-new/trial-02-0019/0007 -> b357bfc658e2ce22d232c5495f4a94f5/0000: failed attempt recovering to seed state - system state diff,
b4f1adfdfdb98d6ac874243c521a591e/0000,b4f1adfdfdb98d6ac874243c521a591e,False,,,,,testrun-strimzi-new/trial-02-0008/0006 -> b4f1adfdfdb98d6ac874243c521a591e/0000: failed attempt recovering to seed state - system state diff,
b51ec2e2dac7e4fb4326878f5556f90d/0000,b51ec2e2dac7e4fb4326878f5556f90d,False,,,,,testrun-strimzi-new/trial-06-0038/0010 -> b51ec2e2dac7e4fb4326878f5556f90d/0000: failed attempt recovering to seed state - system state diff,
b8d58022bc1acdeaf668a2e4d8b9405b/0000,b8d58022bc1acdeaf668a2e4d8b9405b,False,,,,,testrun-strimzi-new/trial-05-0002/0005 -> b8d58022bc1acdeaf668a2e4d8b9405b/0000: failed attempt recovering to seed state - system state diff,
bbf4cc1bca241c731e3a37321a8c2c5b/0000,bbf4cc1bca241c731e3a37321a8c2c5b,False,,,,,testrun-strimzi-new/trial-02-0008/0009 -> bbf4cc1bca241c731e3a37321a8c2c5b/0000: failed attempt recovering to seed state - system state diff,
bd5abd7f24dc25784934dcc1d527ad45/0000,bd5abd7f24dc25784934dcc1d527ad45,False,,,,,testrun-strimzi-new/trial-00-0009/0001 -> bd5abd7f24dc25784934dcc1d527ad45/0000: failed attempt recovering to seed state - system state diff,
bddeb45a356283f0b1039e0d634eda4a/0000,bddeb45a356283f0b1039e0d634eda4a,False,,,,,testrun-strimzi-new/trial-02-0008/0005 -> bddeb45a356283f0b1039e0d634eda4a/0000: failed attempt recovering to seed state - system state diff,
d0d1ddb8629fcbe3a1921e29469924ae/0000,d0d1ddb8629fcbe3a1921e29469924ae,False,,,,,testrun-strimzi-new/trial-03-0010/0005 -> d0d1ddb8629fcbe3a1921e29469924ae/0000: failed attempt recovering to seed state - system state diff,
d10e7123a6c10b5b8e72a105df0079cd/0000,d10e7123a6c10b5b8e72a105df0079cd,False,,,,,testrun-strimzi-new/trial-06-0039/0003 -> d10e7123a6c10b5b8e72a105df0079cd/0000: failed attempt recovering to seed state - system state diff,
d411a43a09cbfad8414c65b7585ea6f2/0000,d411a43a09cbfad8414c65b7585ea6f2,False,,,,,testrun-strimzi-new/trial-06-0003/0002 -> d411a43a09cbfad8414c65b7585ea6f2/0000: failed attempt recovering to seed state - system state diff,
d470d639a0dd52db1dfc9a3797378adf/0000,d470d639a0dd52db1dfc9a3797378adf,False,,,,,testrun-strimzi-new/trial-05-0027/0002 -> d470d639a0dd52db1dfc9a3797378adf/0000: failed attempt recovering to seed state - system state diff,
dc317f166f0fbb353500ca915654e2f0/0000,dc317f166f0fbb353500ca915654e2f0,False,,,,,testrun-strimzi-new/trial-00-0026/0002 -> dc317f166f0fbb353500ca915654e2f0/0000: failed attempt recovering to seed state - system state diff,
dd9c57d3a883b691dc1ffafb3aa77909/0000,dd9c57d3a883b691dc1ffafb3aa77909,False,,,,,testrun-strimzi-new/trial-06-0042/0002 -> dd9c57d3a883b691dc1ffafb3aa77909/0000: failed attempt recovering to seed state - system state diff,
e0c77eea98615fb5e054558c0e855db9/0000,e0c77eea98615fb5e054558c0e855db9,False,,,,,testrun-strimzi-new/trial-05-0002/0007 -> e0c77eea98615fb5e054558c0e855db9/0000: failed attempt recovering to seed state - system state diff,
e337bd23dafbb4103b1147a131a893be/0000,e337bd23dafbb4103b1147a131a893be,False,,,,,testrun-strimzi-new/trial-02-0019/0009 -> e337bd23dafbb4103b1147a131a893be/0000: failed attempt recovering to seed state - system state diff,
e6863b41684ca3d344114c98423bab2a/0000,e6863b41684ca3d344114c98423bab2a,False,,,,,testrun-strimzi-new/trial-02-0049/0003 -> e6863b41684ca3d344114c98423bab2a/0000: failed attempt recovering to seed state - system state diff,
e849d561da4061ddc6efd3983c12bb77/0000,e849d561da4061ddc6efd3983c12bb77,False,,,,,testrun-strimzi-new/trial-05-0032/0003 -> e849d561da4061ddc6efd3983c12bb77/0000: failed attempt recovering to seed state - system state diff,
e9d8bd58a5d09dadaf3af8b0017b4104/0000,e9d8bd58a5d09dadaf3af8b0017b4104,False,,,,,testrun-strimzi-new/trial-02-0052/0005 -> e9d8bd58a5d09dadaf3af8b0017b4104/0000: failed attempt recovering to seed state - system state diff,
ea4e5e5cfc6669b275a4ee73e3598c15/0000,ea4e5e5cfc6669b275a4ee73e3598c15,False,,,,,testrun-strimzi-new/trial-05-0002/0002 -> ea4e5e5cfc6669b275a4ee73e3598c15/0000: failed attempt recovering to seed state - system state diff,
ea738a45761f3e830320ab27cb8badeb/0000,ea738a45761f3e830320ab27cb8badeb,False,,,,,testrun-strimzi-new/trial-06-0039/0002 -> ea738a45761f3e830320ab27cb8badeb/0000: failed attempt recovering to seed state - system state diff,
ed5ecd06bb445710834a90660c2ceabb/0000,ed5ecd06bb445710834a90660c2ceabb,False,,,,,testrun-strimzi-new/trial-07-0000/0002 -> ed5ecd06bb445710834a90660c2ceabb/0000: failed attempt recovering to seed state - system state diff,
ee4ddb5f4bf7b054a1ae5c1baeab9a6a/0000,ee4ddb5f4bf7b054a1ae5c1baeab9a6a,False,,,,,testrun-strimzi-new/trial-02-0028/0003 -> ee4ddb5f4bf7b054a1ae5c1baeab9a6a/0000: failed attempt recovering to seed state - system state diff,
ee67c25c2e989fcf5629153bc5228fa9/0000,ee67c25c2e989fcf5629153bc5228fa9,False,,,,,testrun-strimzi-new/trial-02-0039/0010 -> ee67c25c2e989fcf5629153bc5228fa9/0000: failed attempt recovering to seed state - system state diff,
ef76afbad6901121e808db09d4322128/0000,ef76afbad6901121e808db09d4322128,False,,,,,testrun-strimzi-new/trial-02-0056/0004 -> ef76afbad6901121e808db09d4322128/0000: failed attempt recovering to seed state - system state diff,
f086de94119106cda2994e03014a4214/0000,f086de94119106cda2994e03014a4214,False,,,,,testrun-strimzi-new/trial-02-0019/0005 -> f086de94119106cda2994e03014a4214/0000: failed attempt recovering to seed state - system state diff,
f0ed3ecee8adde09f50510e5d7f3cf8e/0000,f0ed3ecee8adde09f50510e5d7f3cf8e,False,,,,,testrun-strimzi-new/trial-02-0019/0006 -> f0ed3ecee8adde09f50510e5d7f3cf8e/0000: failed attempt recovering to seed state - system state diff,
f3006d29f451b7dd599eceb597e7f157/0000,f3006d29f451b7dd599eceb597e7f157,False,,,,,testrun-strimzi-new/trial-06-0042/0003 -> f3006d29f451b7dd599eceb597e7f157/0000: failed attempt recovering to seed state - system state diff,
f49d98eb15c3b36a6bcf41dfe6fd2a6a/0000,f49d98eb15c3b36a6bcf41dfe6fd2a6a,False,,,,,testrun-strimzi-new/trial-06-0015/0003 -> f49d98eb15c3b36a6bcf41dfe6fd2a6a/0000: failed attempt recovering to seed state - system state diff,
f4fc1783876da1723aa5988e70ba5733/0000,f4fc1783876da1723aa5988e70ba5733,False,,,,,testrun-strimzi-new/trial-02-0018/0002 -> f4fc1783876da1723aa5988e70ba5733/0000: failed attempt recovering to seed state - system state diff,
f551d93636952c13515b36f876194c37/0000,f551d93636952c13515b36f876194c37,False,,,,,testrun-strimzi-new/trial-02-0028/0005 -> f551d93636952c13515b36f876194c37/0000: failed attempt recovering to seed state - system state diff,
fab1f2ab7099c501c4f51af13b83f5d5/0000,fab1f2ab7099c501c4f51af13b83f5d5,False,,,,,testrun-strimzi-new/trial-02-0004/0003 -> fab1f2ab7099c501c4f51af13b83f5d5/0000: failed attempt recovering to seed state - system state diff,
fafbee752a3089ae5856ce9dbcb4ca60/0000,fafbee752a3089ae5856ce9dbcb4ca60,False,,,,,testrun-strimzi-new/trial-05-0040/0001 -> fafbee752a3089ae5856ce9dbcb4ca60/0000: failed attempt recovering to seed state - system state diff,
fc1ab758d5b487a7feb86559db41bbcd/0000,fc1ab758d5b487a7feb86559db41bbcd,False,,,,,testrun-strimzi-new/trial-06-0011/0005 -> fc1ab758d5b487a7feb86559db41bbcd/0000: failed attempt recovering to seed state - system state diff,
testrun-strimzi-new/trial-00-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0000/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0000/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0000/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='', curr='ACTOKEY', path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-00-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0001/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0001/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""deployment\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0001/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""userOperatorContainer\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0001/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0001/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""userOperatorContainer\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0001/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0001/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0001/0008,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0001/0009,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0003/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""-Xms\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""kafkaContainer\"", \""env\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0005,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksIgnoreKeyUse\""]"", ""testcase"": ""boolean-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0003/0009,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksIgnoreKeyUse\""]"", ""testcase"": ""boolean-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksIgnoreKeyUse""]) system_state_diff=None",None,
testrun-strimzi-new/trial-00-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0004/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksIgnoreKeyUse\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: jwksIgnoreKeyUse' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksIgnoreKeyUse""]",None,
testrun-strimzi-new/trial-00-0004/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0004/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksIgnoreKeyUse\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: jwksIgnoreKeyUse' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksIgnoreKeyUse""]",None,
testrun-strimzi-new/trial-00-0004/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0005/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientId\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: clientId' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""clientId""]",None,
testrun-strimzi-new/trial-00-0005/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0006/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0006/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0006/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0006/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0007/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: ""ACTOKEY"": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].minDomains: Invalid value: 5: can only use minDomains if whenUnsatisfiable=DoNotSchedule, not ACTOKEY, spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: ""ACTOKEY"": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].minDomains, message=Invalid value: 5: can only use minDomains if whenUnsatisfiable=DoNotSchedule, not ACTOKEY, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: ""ACTOKEY"": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].minDomains: Invalid value: 5: can only use minDomains if whenUnsatisfiable=DoNotSchedule, not ACTOKEY, spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0007/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0007/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0007/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0008/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0008/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0008/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0008/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0008/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: """": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: """": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: """": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0008/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0009/0001,"{""field"": ""[\""spec\"", \""clusterCa\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0009/0002,"{""field"": ""[\""spec\"", \""clusterCa\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0009/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""image\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0009/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""image\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""image""]) system_state_diff=None",None,
testrun-strimzi-new/trial-00-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0011/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""resources\"", \""claims\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-00-0011/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message:  """" is invalid: patch: Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T11:28:51Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""b0f36a4e-e2c1-4ed6-9c0b-4c68b961ac77\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1628\\"",\\""uid\\"":\\""3f328f65-c436-4372-b1d6-7c80bd8937ee\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""affinity\\"":{\\""nodeAffinity\\"":{\\""requiredDuringSchedulingIgnoredDuringExecution\\"":{\\""nodeSelectorTerms\\"":[{\\""matchFields\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},{\\""matchExpressions\\"":[{\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""}]},{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}],\\""matchFields\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]}]}},\\""podAffinity\\"":{\\""requiredDuringSchedulingIgnoredDuringExecution\\"":[{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""},{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{},\\""namespaces\\"":[\\""ACTOKEY\\""],\\""topologyKey\\"":\\""ACTOKEY\\""}]},\\""podAntiAffinity\\"":{\\""preferredDuringSchedulingIgnoredDuringExecution\\"":[{\\""podAffinityTerm\\"":{\\""labelSelector\\"":{},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""}},{\\""podAffinityTerm\\"":{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaces\\"":[\\""ACTOKEY\\""],\\""topologyKey\\"":\\""ACTOKEY\\""},\\""weight\\"":5}],\\""requiredDuringSchedulingIgnoredDuringExecution\\"":[{\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""}]}},\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""resources\\"":{\\""claims\\"":[{\\""name\\"":\\""INVALID_NAME\\""}]},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""enableServiceLinks\\"":true,\\""hostAliases\\"":[{\\""hostnames\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""],\\""ip\\"":\\""ACTOKEY\\""},{\\""hostnames\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]}],\\""priorityClassName\\"":\\""ACTOKEY\\"",\\""schedulerName\\"":\\""ACTOKEY\\"",\\""securityContext\\"":{\\""fsGroup\\"":4,\\""fsGroupChangePolicy\\"":\\""ACTOKEY\\"",\\""runAsGroup\\"":3,\\""runAsNonRoot\\"":true,\\""runAsUser\\"":4,\\""seLinuxOptions\\"":{\\""level\\"":\\""ACTOKEY\\"",\\""role\\"":\\""ACTOKEY\\"",\\""type\\"":\\""ACTOKEY\\"",\\""user\\"":\\""ACTOKEY\\""},\\""seccompProfile\\"":{\\""localhostProfile\\"":\\""ACTOKEY\\"",\\""type\\"":\\""ACTOKEY\\""},\\""supplementalGroups\\"":[4,5],\\""sysctls\\"":[{\\""name\\"":\\""ACTOKEY\\"",\\""value\\"":\\""ACTOKEY\\""}],\\""windowsOptions\\"":{\\""gmsaCredentialSpec\\"":\\""ACTOKEY\\"",\\""gmsaCredentialSpecName\\"":\\""ACTOKEY\\"",\\""hostProcess\\"":true,\\""runAsUserName\\"":\\""ACTOKEY\\""}},\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":2,\\""tolerations\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":1,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":5,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":3,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":1,\\""value\\"":\\""ACTOKEY\\""}],\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=patch, message=Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T11:28:51Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""b0f36a4e-e2c1-4ed6-9c0b-4c68b961ac77\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1628\\"",\\""uid\\"":\\""3f328f65-c436-4372-b1d6-7c80bd8937ee\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""affinity\\"":{\\""nodeAffinity\\"":{\\""requiredDuringSchedulingIgnoredDuringExecution\\"":{\\""nodeSelectorTerms\\"":[{\\""matchFields\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},{\\""matchExpressions\\"":[{\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""}]},{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}],\\""matchFields\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]}]}},\\""podAffinity\\"":{\\""requiredDuringSchedulingIgnoredDuringExecution\\"":[{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""},{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{},\\""namespaces\\"":[\\""ACTOKEY\\""],\\""topologyKey\\"":\\""ACTOKEY\\""}]},\\""podAntiAffinity\\"":{\\""preferredDuringSchedulingIgnoredDuringExecution\\"":[{\\""podAffinityTerm\\"":{\\""labelSelector\\"":{},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""}},{\\""podAffinityTerm\\"":{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaces\\"":[\\""ACTOKEY\\""],\\""topologyKey\\"":\\""ACTOKEY\\""},\\""weight\\"":5}],\\""requiredDuringSchedulingIgnoredDuringExecution\\"":[{\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""}]}},\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""resources\\"":{\\""claims\\"":[{\\""name\\"":\\""INVALID_NAME\\""}]},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""enableServiceLinks\\"":true,\\""hostAliases\\"":[{\\""hostnames\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""],\\""ip\\"":\\""ACTOKEY\\""},{\\""hostnames\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]}],\\""priorityClassName\\"":\\""ACTOKEY\\"",\\""schedulerName\\"":\\""ACTOKEY\\"",\\""securityContext\\"":{\\""fsGroup\\"":4,\\""fsGroupChangePolicy\\"":\\""ACTOKEY\\"",\\""runAsGroup\\"":3,\\""runAsNonRoot\\"":true,\\""runAsUser\\"":4,\\""seLinuxOptions\\"":{\\""level\\"":\\""ACTOKEY\\"",\\""role\\"":\\""ACTOKEY\\"",\\""type\\"":\\""ACTOKEY\\"",\\""user\\"":\\""ACTOKEY\\""},\\""seccompProfile\\"":{\\""localhostProfile\\"":\\""ACTOKEY\\"",\\""type\\"":\\""ACTOKEY\\""},\\""supplementalGroups\\"":[4,5],\\""sysctls\\"":[{\\""name\\"":\\""ACTOKEY\\"",\\""value\\"":\\""ACTOKEY\\""}],\\""windowsOptions\\"":{\\""gmsaCredentialSpec\\"":\\""ACTOKEY\\"",\\""gmsaCredentialSpecName\\"":\\""ACTOKEY\\"",\\""hostProcess\\"":true,\\""runAsUserName\\"":\\""ACTOKEY\\""}},\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":2,\\""tolerations\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":1,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":5,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":3,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":1,\\""value\\"":\\""ACTOKEY\\""}],\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix, reason=FieldValueInvalid, additionalProperties={})], group=null, kind=null, name=null, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message= """" is invalid: patch: Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T11:28:51Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""b0f36a4e-e2c1-4ed6-9c0b-4c68b961ac77\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1628\\"",\\""uid\\"":\\""3f328f65-c436-4372-b1d6-7c80bd8937ee\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""affinity\\"":{\\""nodeAffinity\\"":{\\""requiredDuringSchedulingIgnoredDuringExecution\\"":{\\""nodeSelectorTerms\\"":[{\\""matchFields\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},{\\""matchExpressions\\"":[{\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""}]},{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}],\\""matchFields\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]}]}},\\""podAffinity\\"":{\\""requiredDuringSchedulingIgnoredDuringExecution\\"":[{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""},{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{},\\""namespaces\\"":[\\""ACTOKEY\\""],\\""topologyKey\\"":\\""ACTOKEY\\""}]},\\""podAntiAffinity\\"":{\\""preferredDuringSchedulingIgnoredDuringExecution\\"":[{\\""podAffinityTerm\\"":{\\""labelSelector\\"":{},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""}},{\\""podAffinityTerm\\"":{\\""labelSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\""},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]}]},\\""namespaces\\"":[\\""ACTOKEY\\""],\\""topologyKey\\"":\\""ACTOKEY\\""},\\""weight\\"":5}],\\""requiredDuringSchedulingIgnoredDuringExecution\\"":[{\\""namespaceSelector\\"":{\\""matchExpressions\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""]},{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""values\\"":[\\""ACTOKEY\\""]}]},\\""topologyKey\\"":\\""ACTOKEY\\""}]}},\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""resources\\"":{\\""claims\\"":[{\\""name\\"":\\""INVALID_NAME\\""}]},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""enableServiceLinks\\"":true,\\""hostAliases\\"":[{\\""hostnames\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\"",\\""ACTOKEY\\""],\\""ip\\"":\\""ACTOKEY\\""},{\\""hostnames\\"":[\\""ACTOKEY\\"",\\""ACTOKEY\\""]}],\\""priorityClassName\\"":\\""ACTOKEY\\"",\\""schedulerName\\"":\\""ACTOKEY\\"",\\""securityContext\\"":{\\""fsGroup\\"":4,\\""fsGroupChangePolicy\\"":\\""ACTOKEY\\"",\\""runAsGroup\\"":3,\\""runAsNonRoot\\"":true,\\""runAsUser\\"":4,\\""seLinuxOptions\\"":{\\""level\\"":\\""ACTOKEY\\"",\\""role\\"":\\""ACTOKEY\\"",\\""type\\"":\\""ACTOKEY\\"",\\""user\\"":\\""ACTOKEY\\""},\\""seccompProfile\\"":{\\""localhostProfile\\"":\\""ACTOKEY\\"",\\""type\\"":\\""ACTOKEY\\""},\\""supplementalGroups\\"":[4,5],\\""sysctls\\"":[{\\""name\\"":\\""ACTOKEY\\"",\\""value\\"":\\""ACTOKEY\\""}],\\""windowsOptions\\"":{\\""gmsaCredentialSpec\\"":\\""ACTOKEY\\"",\\""gmsaCredentialSpecName\\"":\\""ACTOKEY\\"",\\""hostProcess\\"":true,\\""runAsUserName\\"":\\""ACTOKEY\\""}},\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":2,\\""tolerations\\"":[{\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":1,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":5,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":3,\\""value\\"":\\""ACTOKEY\\""},{\\""effect\\"":\\""ACTOKEY\\"",\\""key\\"":\\""ACTOKEY\\"",\\""operator\\"":\\""ACTOKEY\\"",\\""tolerationSeconds\\"":1,\\""value\\"":\\""ACTOKEY\\""}],\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""112903.2+46\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0011/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0011/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0011/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0011/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0011/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0011/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0011/0009,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0011/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0012/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0012/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0012/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0013/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0013/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0013/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0013/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0014/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0014/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-00-0014/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-00-0014/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0014/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0015/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0016/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0016/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""readinessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""readinessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""readinessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0005,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0006,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0008,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-00-0016/0009,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0016/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0017/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0017/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0017/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0017/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0017/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0018/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0018/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""apiService\"", \""ipFamilies\""]"", ""testcase"": ""array-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0018/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0018/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""apiService\"", \""ipFamilies\""]"", ""testcase"": ""array-push""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0018/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0018/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""apiService\"", \""ipFamilies\""]"", ""testcase"": ""array-pop""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0018/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0019/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0019/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[4].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[3].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[3].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[4].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[3].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[3].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[4].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespaceSelector.matchExpressions[3].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[3].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.labelSelector.matchExpressions[1].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[1].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0019/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0019/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0019/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/api/v1/namespaces/kafka/services/test-cluster-zookeeper-nodes. Message: Service ""test-cluster-zookeeper-nodes"" is invalid: spec.ipFamilyPolicy: Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.ipFamilyPolicy, message=Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services, reason=FieldValueInvalid, additionalProperties={})], group=null, kind=Service, name=test-cluster-zookeeper-nodes, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Service ""test-cluster-zookeeper-nodes"" is invalid: spec.ipFamilyPolicy: Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0019/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0019/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""SingleStack""}",False,,,,,None,
testrun-strimzi-new/trial-00-0019/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""PreferDualStack""}",False,,,,,None,
testrun-strimzi-new/trial-00-0019/0008,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""RequireDualStack""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/api/v1/namespaces/kafka/services/test-cluster-zookeeper-nodes. Message: Service ""test-cluster-zookeeper-nodes"" is invalid: spec.ipFamilyPolicy: Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.ipFamilyPolicy, message=Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services, reason=FieldValueInvalid, additionalProperties={})], group=null, kind=Service, name=test-cluster-zookeeper-nodes, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Service ""test-cluster-zookeeper-nodes"" is invalid: spec.ipFamilyPolicy: Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0019/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0020/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0020/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""logging\"", \""valueFrom\"", \""configMapKeyRef\"", \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,message='Invalid input determined from status message: Logging configuration is invalid: [The key under which the logging configuration is stored in the ConfigMap is missing]' responsible_property=[],None,
testrun-strimzi-new/trial-00-0020/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0021/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0021/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0021/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0021/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0021/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0022/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0022/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeAffinityPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeAffinityPolicy, message=Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeAffinityPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-00-0022/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0023/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0023/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0023/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0023/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-00-0023/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-00-0024/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0024/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0024/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""jmxTrans"", ""kafkaQueries"", 0, ""targetMBean""]) system_state_diff=None",None,
testrun-strimzi-new/trial-00-0025/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0025/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-00-0025/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-00-0025/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""jmxTrans"", ""kafkaQueries"", 0, ""targetMBean""]) system_state_diff=None",None,
testrun-strimzi-new/trial-00-0026/0000,{},False,,,,,None,
testrun-strimzi-new/trial-00-0026/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-00-0026/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-00-0026/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0000/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-01-0000/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-01-0000/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-01-0000/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0000/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-01-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0001/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-01-0001/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-01-0001/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-01-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0002/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""serviceAccount\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-01-0002/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0002/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""serviceAccount\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-01-0002/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0003/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""livenessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0003/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""livenessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0003/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0003/0004,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""livenessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-01-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0004/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientId\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: clientId' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""clientId""]",None,
testrun-strimzi-new/trial-01-0004/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0004/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientId\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: clientId' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""clientId""]",None,
testrun-strimzi-new/trial-01-0004/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0005/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-01-0005/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-01-0005/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""finalizers\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure finalizers because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-01-0005/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0005/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""finalizers\"", 0]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure finalizers because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-01-0005/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0005/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""finalizers\"", 0]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure finalizers because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-01-0005/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0007/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""image\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-01-0007/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""image\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-01-0007/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""image\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""image""]) system_state_diff=None",None,
testrun-strimzi-new/trial-01-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0008/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-01-0008/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0008/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-01-0008/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-01-0008/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0008/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev={}, curr='NotPresent', path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""podAffinityTerm"", ""labelSelector"", ""matchLabels""]) system_state_diff=None",None,
testrun-strimzi-new/trial-01-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0009/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-01-0009/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-01-0009/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev={}, curr='NotPresent', path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""podAffinityTerm"", ""labelSelector"", ""matchLabels""]) system_state_diff=None",None,
testrun-strimzi-new/trial-01-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0010/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-01-0010/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0010/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-01-0011/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-01-0011/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0000/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""key\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot use tls type authentication with disabled TLS encryption]' responsible_property=[],None,
testrun-strimzi-new/trial-02-0000/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""key\""]"", ""testcase"": ""string-change""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-02-0000/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""key\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0006,"{""field"": ""[\""spec\"", \""maintenanceTimeWindows\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0007,"{""field"": ""[\""spec\"", \""maintenanceTimeWindows\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0008,"{""field"": ""[\""spec\"", \""maintenanceTimeWindows\"", 0]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0000/0009,"{""field"": ""[\""spec\"", \""maintenanceTimeWindows\"", 0]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0001/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""alternativeNames\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0001/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""alternativeNames\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0001/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""alternativeNames\"", 0]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0001/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""alternativeNames\"", 0]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0001/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0001/0006,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0002/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0002/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0003/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""class\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0003/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""class\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafka"", ""storage"", ""volumes"", 0, ""class""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0004/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""class\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0004/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""class\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0004/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""class\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafka"", ""storage"", ""volumes"", 0, ""class""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0005/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0005/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0005/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0005/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0006/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0006/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0006/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""nodeAffinityPolicy""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0007/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0007/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0008/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""port\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""port\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""port\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0005,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0008,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""whenUnsatisfiable\""]"", ""testcase"": ""k8s-invalid_value""}",False,,,,,None,
testrun-strimzi-new/trial-02-0008/0009,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""whenUnsatisfiable\""]"", ""testcase"": ""k8s-when_unsatisfiable_change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='INVALID_WHEN_UNSATISFIABLE', curr='ScheduleAnyway', path=[""spec"", ""cruiseControl"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""whenUnsatisfiable""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0009/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""podDisruptionBudget\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0010/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""overrides\"", 0, \""broker\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""overrides\"", 0, \""broker\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""livenessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0010/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""livenessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0010/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""serviceAccount\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""serviceAccount\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0010/0009,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0010/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0011/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0011/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0012/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0012/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""clusterRoleBinding\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0012/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""topicOperatorRoleBinding\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0012/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""topicOperatorRoleBinding\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0013/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0013/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""brokers\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure brokers[].host because it is not Route or Ingress based listener, listener plain cannot configure brokers[].loadBalancerIP because it is not LoadBalancer based listener, listener plain cannot configure brokers[].nodePort because it is not NodePort based listener]' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0013/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0013/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""brokers\"", 0]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0013/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0013/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0013/0006,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0013/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0013/0008,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0013/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0014/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0014/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""livenessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0014/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""livenessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0014/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""livenessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0014/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0014/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0015/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0015/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0015/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0016/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0016/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0016/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0017/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0017/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""priorityClassName\""]"", ""testcase"": ""k8s-invalid_priority_class_name""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.priorityClassName: Invalid value: ""INVALID_PRIORITY_CLASS_NAME"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'). Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.priorityClassName, message=Invalid value: ""INVALID_PRIORITY_CLASS_NAME"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.priorityClassName: Invalid value: ""INVALID_PRIORITY_CLASS_NAME"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0017/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0018/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0018/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""priorityClassName\""]"", ""testcase"": ""k8s-priority_class_name_change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0018/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""persistentVolumeClaim\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0018/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0018/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0018/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0019/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0006,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""service\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0007,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""service\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0008,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""typeNames\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0019/0009,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""typeNames\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0020/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0020/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""typeNames\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0020/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""typeNames\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0020/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""typeNames\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-02-0021/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0021/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""image\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0021/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0021/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""image\""]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0021/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0021/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""image\""]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0021/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0022/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0022/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientAudience\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: clientAudience' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""clientAudience""]",None,
testrun-strimzi-new/trial-02-0022/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0022/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientAudience\""]"", ""testcase"": ""string-change""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-02-0022/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0022/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientAudience\""]"", ""testcase"": ""string-empty""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-02-0022/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0023/0000,{},True,,message='pod: test-cluster-entity-operator-6f85fc8b69-zdclz container [topic-operator] restart_count [1]',,,None,
testrun-strimzi-new/trial-02-0024/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0024/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""logging\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0024/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""logging\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafkaExporter"", ""logging""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0025/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0025/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""logging\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0025/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""logging\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0025/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""logging\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafkaExporter"", ""logging""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0026/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0027/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0027/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeTaintsPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0027/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0027/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeTaintsPolicy\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0027/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0027/0005,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeTaintsPolicy\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: """": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: """": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: """": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0027/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0028/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0028/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0028/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0028/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0028/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0028/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0029/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0029/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""securityContext\""]"", ""testcase"": ""k8s-bad_security_context""}",True,message='Pod test-cluster-kafka-0 crashed',,,,None,
testrun-strimzi-new/trial-02-0030/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0030/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""securityContext\""]"", ""testcase"": ""k8s-root_security_context""}",False,,,,,None,
testrun-strimzi-new/trial-02-0030/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""securityContext\""]"", ""testcase"": ""k8s-normal_security_context""}",True,message='Pod test-cluster-kafka-0 crashed',,,,None,
testrun-strimzi-new/trial-02-0031/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0031/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0031/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0031/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0031/0004,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='.865nPGe+9', curr='70mukiePM63', path=[""spec"", ""kafkaExporter"", ""template"", ""pod"", ""tmpDirSizeLimit""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0032/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0032/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0032/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0032/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0032/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0032/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0032/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0032/0007,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0032/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0032/0009,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0032/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0033/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0034/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0034/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0034/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0034/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""podAffinityTerm"", ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0035/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0035/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0035/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0035/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""podAffinityTerm"", ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0036/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0036/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0036/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0036/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0036/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0037/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0037/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0037/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0037/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0037/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-02-0038/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0038/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""deployment\"", \""metadata\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0038/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0038/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0038/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0038/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0038/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0039/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-pop""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0039/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilies\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0005,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilies\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilies\"", 0]"", ""testcase"": ""IPv4""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0008,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""nodesService\"", \""ipFamilies\"", 0]"", ""testcase"": ""IPv6""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0009,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0039/0010,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0040/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0040/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0040/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0041/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0041/0001,"{""field"": ""[\""status\"", \""listeners\"", 0, \""bootstrapServers\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0041/0002,"{""field"": ""[\""status\"", \""listeners\"", 0, \""bootstrapServers\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""status"", ""listeners"", 0, ""bootstrapServers""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0042/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0042/0001,"{""field"": ""[\""status\"", \""listeners\"", 0, \""bootstrapServers\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0042/0002,"{""field"": ""[\""status\"", \""listeners\"", 0, \""bootstrapServers\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0042/0003,"{""field"": ""[\""status\"", \""listeners\"", 0, \""bootstrapServers\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""status"", ""listeners"", 0, ""bootstrapServers""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0043/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0043/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""image\""]"", ""testcase"": ""string-deletion""}",True,message='Pod test-cluster-entity-operator-558479777-svbd7 crashed',"message='deployment: test-cluster-entity-operator replicas [1] ready_replicas [None], test-cluster-entity-operator condition [Available] status [False] message [Deployment does not have minimum availability.]\npod: test-cluster-entity-operator-558479777-svbd7 container [topic-operator] restart_count [6]'",,,None,
testrun-strimzi-new/trial-02-0044/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0044/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""image\""]"", ""testcase"": ""string-change""}",True,,"message='deployment: test-cluster-entity-operator replicas [1] ready_replicas [None], test-cluster-entity-operator condition [Available] status [False] message [Deployment does not have minimum availability.]\npod: test-cluster-entity-operator-558479777-d7k4n container [topic-operator] restart_count [6]'",,,None,
testrun-strimzi-new/trial-02-0045/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0045/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""image\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: spec.template.spec.containers[2].image: Required value. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.containers[2].image, message=Required value, reason=FieldValueRequired, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: spec.template.spec.containers[2].image: Required value, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0045/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0046/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0046/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message:  """" is invalid: patch: Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T21:33:20Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""91e5d6c6-5073-4e4c-a0a6-c04c59c9c11b\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1404\\"",\\""uid\\"":\\""30bff253-2458-4440-9a1c-ea449ba0747b\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""schedulerName\\"":\\""default-scheduler\\"",\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":30,\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=patch, message=Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T21:33:20Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""91e5d6c6-5073-4e4c-a0a6-c04c59c9c11b\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1404\\"",\\""uid\\"":\\""30bff253-2458-4440-9a1c-ea449ba0747b\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""schedulerName\\"":\\""default-scheduler\\"",\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":30,\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix, reason=FieldValueInvalid, additionalProperties={})], group=null, kind=null, name=null, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message= """" is invalid: patch: Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T21:33:20Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""91e5d6c6-5073-4e4c-a0a6-c04c59c9c11b\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1404\\"",\\""uid\\"":\\""30bff253-2458-4440-9a1c-ea449ba0747b\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""schedulerName\\"":\\""default-scheduler\\"",\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":30,\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""84.3316ine+1\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0046/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0046/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message:  """" is invalid: patch: Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T21:33:20Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""91e5d6c6-5073-4e4c-a0a6-c04c59c9c11b\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1404\\"",\\""uid\\"":\\""30bff253-2458-4440-9a1c-ea449ba0747b\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""schedulerName\\"":\\""default-scheduler\\"",\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":30,\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=patch, message=Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T21:33:20Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""91e5d6c6-5073-4e4c-a0a6-c04c59c9c11b\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1404\\"",\\""uid\\"":\\""30bff253-2458-4440-9a1c-ea449ba0747b\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""schedulerName\\"":\\""default-scheduler\\"",\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":30,\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix, reason=FieldValueInvalid, additionalProperties={})], group=null, kind=null, name=null, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message= """" is invalid: patch: Invalid value: ""{\\""apiVersion\\"":\\""apps/v1\\"",\\""kind\\"":\\""Deployment\\"",\\""metadata\\"":{\\""annotations\\"":{\\""deployment.kubernetes.io/revision\\"":\\""1\\""},\\""creationTimestamp\\"":\\""2024-02-22T21:33:20Z\\"",\\""generation\\"":1,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""name\\"":\\""test-cluster-entity-operator\\"",\\""namespace\\"":\\""kafka\\"",\\""ownerReferences\\"":[{\\""apiVersion\\"":\\""kafka.strimzi.io/v1beta2\\"",\\""kind\\"":\\""Kafka\\"",\\""name\\"":\\""test-cluster\\"",\\""uid\\"":\\""91e5d6c6-5073-4e4c-a0a6-c04c59c9c11b\\"",\\""controller\\"":false,\\""blockOwnerDeletion\\"":false}],\\""resourceVersion\\"":\\""1404\\"",\\""uid\\"":\\""30bff253-2458-4440-9a1c-ea449ba0747b\\""},\\""spec\\"":{\\""replicas\\"":1,\\""selector\\"":{\\""matchLabels\\"":{\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""}},\\""strategy\\"":{\\""type\\"":\\""Recreate\\""},\\""template\\"":{\\""metadata\\"":{\\""creationTimestamp\\"":null,\\""labels\\"":{\\""app.kubernetes.io/instance\\"":\\""test-cluster\\"",\\""app.kubernetes.io/managed-by\\"":\\""strimzi-cluster-operator\\"",\\""app.kubernetes.io/name\\"":\\""entity-operator\\"",\\""app.kubernetes.io/part-of\\"":\\""strimzi-test-cluster\\"",\\""strimzi.io/cluster\\"":\\""test-cluster\\"",\\""strimzi.io/component-type\\"":\\""entity-operator\\"",\\""strimzi.io/kind\\"":\\""Kafka\\"",\\""strimzi.io/name\\"":\\""test-cluster-entity-operator\\""},\\""annotations\\"":{\\""strimzi.io/cluster-ca-cert-generation\\"":\\""0\\"",\\""strimzi.io/cluster-ca-key-generation\\"":\\""0\\""}},\\""spec\\"":{\\""containers\\"":[{\\""args\\"":[\\""/opt/strimzi/bin/topic_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_RESOURCE_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""localhost:2181\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS\\"",\\""value\\"":\\""18000\\""},{\\""name\\"":\\""STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS\\"",\\""value\\"":\\""6\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_SECURITY_PROTOCOL\\"",\\""value\\"":\\""SSL\\""},{\\""name\\"":\\""STRIMZI_TLS_ENABLED\\"",\\""value\\"":\\""true\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""topic-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8080,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""startupProbe\\"":{\\""failureThreshold\\"":12,\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":15,\\""periodSeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-to-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/topic-operator/custom-config/\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/strimzi/bin/user_operator_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""STRIMZI_KAFKA_BOOTSTRAP_SERVERS\\"",\\""value\\"":\\""test-cluster-kafka-bootstrap:9091\\""},{\\""name\\"":\\""STRIMZI_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_LABELS\\"",\\""value\\"":\\""strimzi.io/cluster=test-cluster\\""},{\\""name\\"":\\""STRIMZI_FULL_RECONCILIATION_INTERVAL_MS\\"",\\""value\\"":\\""120000\\""},{\\""name\\"":\\""STRIMZI_CA_KEY_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca\\""},{\\""name\\"":\\""STRIMZI_CA_CERT_NAME\\"",\\""value\\"":\\""test-cluster-clients-ca-cert\\""},{\\""name\\"":\\""STRIMZI_CA_NAMESPACE\\"",\\""value\\"":\\""kafka\\""},{\\""name\\"":\\""STRIMZI_CA_VALIDITY\\"",\\""value\\"":\\""365\\""},{\\""name\\"":\\""STRIMZI_CA_RENEWAL\\"",\\""value\\"":\\""30\\""},{\\""name\\"":\\""STRIMZI_CLUSTER_CA_CERT_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-cluster-ca-cert\\""},{\\""name\\"":\\""STRIMZI_EO_KEY_SECRET_NAME\\"",\\""value\\"":\\""test-cluster-entity-user-operator-certs\\""},{\\""name\\"":\\""STRIMZI_GC_LOG_ENABLED\\"",\\""value\\"":\\""false\\""},{\\""name\\"":\\""STRIMZI_SECRET_PREFIX\\"",\\""value\\"":\\""\\""},{\\""name\\"":\\""STRIMZI_ACLS_ADMIN_API_SUPPORTED\\"",\\""value\\"":\\""false\\""}],\\""image\\"":\\""quay.io/strimzi/operator:0.38.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""livenessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/healthy\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""name\\"":\\""user-operator\\"",\\""ports\\"":[{\\""name\\"":\\""healthcheck\\"",\\""containerPort\\"":8081,\\""protocol\\"":\\""TCP\\""}],\\""readinessProbe\\"":{\\""httpGet\\"":{\\""path\\"":\\""/ready\\"",\\""port\\"":\\""healthcheck\\""},\\""initialDelaySeconds\\"":10,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-uo-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""entity-user-operator-metrics-and-logging\\"",\\""mountPath\\"":\\""/opt/user-operator/custom-config/\\""},{\\""name\\"":\\""euo-certs\\"",\\""mountPath\\"":\\""/etc/euo-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]},{\\""args\\"":[\\""/opt/stunnel/entity_operator_stunnel_run.sh\\""],\\""env\\"":[{\\""name\\"":\\""TLS_SIDECAR_LOG_LEVEL\\"",\\""value\\"":\\""notice\\""},{\\""name\\"":\\""STRIMZI_ZOOKEEPER_CONNECT\\"",\\""value\\"":\\""test-cluster-zookeeper-client:2181\\""}],\\""image\\"":\\""quay.io/strimzi/kafka:0.38.0-kafka-3.6.0\\"",\\""imagePullPolicy\\"":\\""IfNotPresent\\"",\\""lifecycle\\"":{\\""preStop\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/entity_operator_stunnel_pre_stop.sh\\""]}}},\\""livenessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""name\\"":\\""tls-sidecar\\"",\\""readinessProbe\\"":{\\""exec\\"":{\\""command\\"":[\\""/opt/stunnel/stunnel_healthcheck.sh\\"",\\""2181\\""]},\\""initialDelaySeconds\\"":15,\\""timeoutSeconds\\"":5},\\""volumeMounts\\"":[{\\""name\\"":\\""strimzi-tls-sidecar-tmp\\"",\\""mountPath\\"":\\""/tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""mountPath\\"":\\""/etc/eto-certs/\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""mountPath\\"":\\""/etc/tls-sidecar/cluster-ca-certs/\\""}]}],\\""schedulerName\\"":\\""default-scheduler\\"",\\""serviceAccountName\\"":\\""test-cluster-entity-operator\\"",\\""terminationGracePeriodSeconds\\"":30,\\""volumes\\"":[{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-topic-operator-config\\""},\\""name\\"":\\""entity-topic-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-to-tmp\\""},{\\""name\\"":\\""eto-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-topic-operator-certs\\"",\\""defaultMode\\"":292}},{\\""configMap\\"":{\\""name\\"":\\""test-cluster-entity-user-operator-config\\""},\\""name\\"":\\""entity-user-operator-metrics-and-logging\\""},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-uo-tmp\\""},{\\""name\\"":\\""euo-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-entity-user-operator-certs\\"",\\""defaultMode\\"":292}},{\\""emptyDir\\"":{\\""medium\\"":\\""Memory\\"",\\""sizeLimit\\"":\\""257muumkP2726855\\""},\\""name\\"":\\""strimzi-tls-sidecar-tmp\\""},{\\""name\\"":\\""cluster-ca-certs\\"",\\""secret\\"":{\\""secretName\\"":\\""test-cluster-cluster-ca-cert\\"",\\""defaultMode\\"":292}}]}}}}"": unable to parse quantity\'s suffix, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0046/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0046/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0046/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0046/0007,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'). Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0046/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0047/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""externalBootstrapRoute\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""externalBootstrapRoute\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0008,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""terminationGracePeriodSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0047/0009,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""terminationGracePeriodSeconds\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=3, curr=0, path=[""spec"", ""entityOperator"", ""template"", ""pod"", ""terminationGracePeriodSeconds""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0048/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0048/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""terminationGracePeriodSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0048/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""terminationGracePeriodSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0049/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0049/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0049/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""kafkaContainer\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0049/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""kafkaContainer\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0049/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""javaSystemProperties\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0049/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0050/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""clientService\"", \""ipFamilies\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""clientService\"", \""ipFamilies\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""clientService\"", \""ipFamilies\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""clientService\"", \""ipFamilies\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0005,"{""field"": ""[\""status\"", \""listeners\"", 0, \""certificates\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0006,"{""field"": ""[\""status\"", \""listeners\"", 0, \""certificates\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0050/0007,"{""field"": ""[\""status\"", \""listeners\"", 0, \""certificates\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0051/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0051/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0051/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0051/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-kafka-exporter. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0051/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0052/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""podDisruptionBudget\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0052/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0053/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\""]"", ""testcase"": ""object-deletion""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-02-0053/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""livenessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0053/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""livenessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-02-0053/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0009,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0053/0010,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev={}, curr='NotPresent', path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""labelSelector"", ""matchLabels""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0054/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0054/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0054/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-02-0054/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev={}, curr='NotPresent', path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""labelSelector"", ""matchLabels""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0055/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0055/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0055/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: spec.template.spec.containers[2].livenessProbe.successThreshold: Invalid value: 3: must be 1. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.containers[2].livenessProbe.successThreshold, message=Invalid value: 3: must be 1, reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: spec.template.spec.containers[2].livenessProbe.successThreshold: Invalid value: 3: must be 1, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-02-0055/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-02-0055/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-02-0056/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0056/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0056/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0056/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0056/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=3, curr=0, path=[""spec"", ""kafka"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""maxSkew""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0057/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0057/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0057/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=2, curr=4, path=[""spec"", ""kafka"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""maxSkew""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0058/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0058/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0058/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""affinity"", ""podAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0059/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0059/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0059/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-02-0059/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""affinity"", ""podAffinity"", ""requiredDuringSchedulingIgnoredDuringExecution"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-02-0060/0000,{},False,,,,,None,
testrun-strimzi-new/trial-02-0060/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""externalBootstrapService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0060/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""externalBootstrapService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-02-0060/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""topicRegex\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0000/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0006,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0007,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0000/0008,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\""]"", ""testcase"": ""object-deletion""}",False,,,,"message=""Invalid input determined from status message: ConfigMap ACTOKEY with external logging configuration does not exist or doesn't contain the configuration under the ACTOKEY key."" responsible_property=[""spec"", ""entityOperator"", ""topicOperator"", ""logging"", ""type""]",None,
testrun-strimzi-new/trial-03-0000/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0001/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0001/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0001/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0001/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0002/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-03-0002/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=1, curr='NotPresent', path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""maxSkew""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0003/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""persistentVolumeClaim\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""persistentVolumeClaim\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0005,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-03-0003/0008,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""resources\"", \""requests\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0004/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""podSet\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0004/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""perPodRoute\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0004/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""perPodRoute\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0004/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""introspectionEndpointUri\""]"", ""testcase"": ""string-deletion""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false', listener plain: Introspection Endpoint URI needs to be configured together with 'clientId' and 'clientSecret']"" responsible_property=[]",None,
testrun-strimzi-new/trial-03-0004/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0004/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""introspectionEndpointUri\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: introspectionEndpointUri' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""introspectionEndpointUri""]",None,
testrun-strimzi-new/trial-03-0004/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0004/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""introspectionEndpointUri\""]"", ""testcase"": ""string-empty""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false', listener plain: Introspection Endpoint URI needs to be configured together with 'clientId' and 'clientSecret']"" responsible_property=[]",None,
testrun-strimzi-new/trial-03-0004/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0005/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0005/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0005/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0005/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0005/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0005/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0006/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""securityContext\"", \""sysctls\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0007/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""topicOperatorRoleBinding\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""storage\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""storage\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0006,"{""field"": ""[\""status\"", \""listeners\"", 0, \""addresses\"", 0, \""host\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0007,"{""field"": ""[\""status\"", \""listeners\"", 0, \""addresses\"", 0, \""host\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0008,"{""field"": ""[\""status\"", \""listeners\"", 0, \""addresses\"", 0, \""host\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-03-0007/0009,"{""field"": ""[\""status\"", \""listeners\"", 0, \""addresses\"", 0, \""host\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0008/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""livenessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0008/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0008/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""livenessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0008/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0008/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""enableECDSA\""]"", ""testcase"": ""boolean-deletion""}",False,,,,"message='Invalid input determined from status message: In resource Kafka(kafka/test-cluster) in API version kafka.strimzi.io/v1beta2 the enableECDSA property at path spec.kafka.listeners.auth.enableECDSA has been deprecated.' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""enableECDSA""]",None,
testrun-strimzi-new/trial-03-0008/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0008/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""enableECDSA\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: enableECDSA' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""enableECDSA""]",None,
testrun-strimzi-new/trial-03-0008/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0009/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""resources\"", \""claims\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0009/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0010/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""networkPolicyPeers\"", 0, \""podSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""networkPolicyPeers\"", 0, \""podSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""networkPolicyPeers\"", 0, \""podSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""networkPolicyPeers\"", 0, \""podSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0009,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""minDomains\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0010/0010,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""minDomains\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=2, curr=0, path=[""spec"", ""cruiseControl"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""minDomains""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0012/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0012/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""serviceAccount\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""readinessProbe\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""readinessProbe\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-03-0012/0009,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-03-0012/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0013/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0014/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0014/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""outputDefinitions\"", 0, \""typeNames\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0014/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0014/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""zookeeper"", ""jvmOptions"", ""gcLoggingEnabled""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0015/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0015/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,,None,
testrun-strimzi-new/trial-03-0015/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-off""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""zookeeper"", ""jvmOptions"", ""gcLoggingEnabled""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0016/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0016/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,,None,
testrun-strimzi-new/trial-03-0016/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""metricsConfig\"", \""valueFrom\"", \""configMapKeyRef\"", \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,message='Invalid input determined from status message: Metrics configuration is invalid: [The key under which the metrics configuration is stored in the ConfigMap is missing]' responsible_property=[],None,
testrun-strimzi-new/trial-03-0016/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0017/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0017/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""url\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: url' responsible_property=[""spec"", ""kafka"", ""authorization"", ""url""]",None,
testrun-strimzi-new/trial-03-0017/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0017/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""url\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: url' responsible_property=[""spec"", ""kafka"", ""authorization"", ""url""]",None,
testrun-strimzi-new/trial-03-0017/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0017/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""url\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: url' responsible_property=[""spec"", ""kafka"", ""authorization"", ""url""]",None,
testrun-strimzi-new/trial-03-0017/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0018/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0018/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[4].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[4].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[1].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].labelSelector.matchExpressions[4].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[2].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[0].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[3].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[4].namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-03-0018/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0018/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0019/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0019/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0019/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0019/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""targetMBean\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0019/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""targetMBean\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""kafkaQueries"", 0, ""targetMBean""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0020/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0020/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""targetMBean\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-03-0020/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""targetMBean\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-03-0020/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""targetMBean\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""kafkaQueries"", 0, ""targetMBean""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0021/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0021/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""loadBalancerSourceRanges\""]"", ""testcase"": ""array-deletion""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure loadBalancerSourceRanges because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-03-0021/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0021/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""loadBalancerSourceRanges\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-03-0021/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""loadBalancerSourceRanges\""]"", ""testcase"": ""array-push""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure loadBalancerSourceRanges because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-03-0021/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0022/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0022/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""loadBalancerSourceRanges\""]"", ""testcase"": ""array-pop""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure loadBalancerSourceRanges because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-03-0022/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0022/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""loadBalancerSourceRanges\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-03-0023/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0023/0001,"{""field"": ""[\""spec\"", \""clusterCa\"", \""generateCertificateAuthority\""]"", ""testcase"": ""boolean-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0023/0002,"{""field"": ""[\""spec\"", \""clusterCa\"", \""generateCertificateAuthority\""]"", ""testcase"": ""boolean-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""clusterCa"", ""generateCertificateAuthority""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0024/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0024/0001,"{""field"": ""[\""spec\"", \""clusterCa\"", \""generateCertificateAuthority\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,,None,
testrun-strimzi-new/trial-03-0024/0002,"{""field"": ""[\""spec\"", \""clusterCa\"", \""generateCertificateAuthority\""]"", ""testcase"": ""boolean-toggle-off""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""clusterCa"", ""generateCertificateAuthority""]) system_state_diff=None",None,
testrun-strimzi-new/trial-03-0025/0000,{},False,,,,,None,
testrun-strimzi-new/trial-03-0025/0001,"{""field"": ""[\""spec\"", \""clusterCa\"", \""generateCertificateAuthority\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,,None,
testrun-strimzi-new/trial-03-0025/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0025/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0025/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""readinessProbe\"", \""successThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-03-0025/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-03-0025/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""-Xms\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0025/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""jvmOptions\"", \""-Xms\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-03-0025/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0000/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-04-0000/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0000/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-pop""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-04-0000/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0000/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-04-0000/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0001/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-04-0001/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""nodePort\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure bootstrap.nodePort because it is not NodePort based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-04-0001/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0001/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""nodePort\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure bootstrap.nodePort because it is not NodePort based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-04-0001/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0001/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""tokenEndpointUri\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: tokenEndpointUri' responsible_property=[""spec"", ""kafka"", ""authorization"", ""tokenEndpointUri""]",None,
testrun-strimzi-new/trial-04-0001/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0001/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""tokenEndpointUri\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-04-0001/0009,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""tokenEndpointUri\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-04-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0002/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""tokenEndpointUri\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: tokenEndpointUri' responsible_property=[""spec"", ""kafka"", ""authorization"", ""tokenEndpointUri""]",None,
testrun-strimzi-new/trial-04-0002/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0004/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""imagePullSecrets\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-04-0004/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""podDisruptionBudget\"", \""maxUnavailable\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-04-0004/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0004/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""podDisruptionBudget\"", \""maxUnavailable\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-04-0004/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0004/0006,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""logging\"", \""valueFrom\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-04-0004/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0004/0008,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""logging\"", \""valueFrom\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.cruiseControl.logging with an unknown property: valueFrom' responsible_property=[""spec"", ""cruiseControl"", ""logging"", ""valueFrom""]",None,
testrun-strimzi-new/trial-04-0004/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0005/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""allowOnError\""]"", ""testcase"": ""boolean-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: allowOnError' responsible_property=[""spec"", ""kafka"", ""authorization"", ""allowOnError""]",None,
testrun-strimzi-new/trial-04-0005/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0005/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""allowOnError\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: allowOnError' responsible_property=[""spec"", ""kafka"", ""authorization"", ""allowOnError""]",None,
testrun-strimzi-new/trial-04-0005/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0005/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""allowOnError\""]"", ""testcase"": ""boolean-toggle-on""}",True,message='Pod test-cluster-kafka-0 crashed',,,,None,
testrun-strimzi-new/trial-04-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0006/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-04-0006/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0006/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-04-0006/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0007/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""overrides\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-04-0007/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""overrides\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""kafka"", ""storage"", ""volumes"", 0, ""overrides"", 0, ""class""]) system_state_diff=None",None,
testrun-strimzi-new/trial-04-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0008/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""overrides\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-04-0008/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""overrides\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-04-0008/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""overrides\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""kafka"", ""storage"", ""volumes"", 0, ""overrides"", 0, ""class""]) system_state_diff=None",None,
testrun-strimzi-new/trial-04-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0009/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""storage\"", \""volumes\"", 0, \""overrides\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-04-0009/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""metricsConfig\"", \""valueFrom\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: ConfigMap ACTOKEY does not exist' responsible_property=[""spec"", ""zookeeper"", ""metricsConfig"", ""valueFrom"", ""configMapKeyRef"", ""key""]",None,
testrun-strimzi-new/trial-04-0009/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0009/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""metricsConfig\"", \""valueFrom\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Metrics configuration is invalid: [Config Map reference is missing]' responsible_property=[],None,
testrun-strimzi-new/trial-04-0009/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-04-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-04-0010/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""perPodIngress\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-04-0010/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0000/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""type\""]"", ""testcase"": ""string-deletion""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-05-0000/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0000/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""type\""]"", ""testcase"": ""tls""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot use tls type authentication with disabled TLS encryption]' responsible_property=[],None,
testrun-strimzi-new/trial-05-0000/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0001/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""type\""]"", ""testcase"": ""scram-sha-512""}",False,,,,,None,
testrun-strimzi-new/trial-05-0001/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""type\""]"", ""testcase"": ""oauth""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-05-0001/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0002/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""type\""]"", ""testcase"": ""custom""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""type\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""type\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""type\""]"", ""testcase"": ""inline""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0006,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""type\""]"", ""testcase"": ""external""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""podSet\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0002/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""podSet\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0003/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0003/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0003/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0003/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0004/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""valueFrom\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Logging configuration is invalid: [Config Map reference is missing]' responsible_property=[],None,
testrun-strimzi-new/trial-05-0004/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0004/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""valueFrom\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.entityOperator.topicOperator.logging with an unknown property: valueFrom' responsible_property=[""spec"", ""entityOperator"", ""topicOperator"", ""logging"", ""valueFrom""]",None,
testrun-strimzi-new/trial-05-0004/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0005/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0005/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""hostAliases"", 0, ""ip""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0006/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0006/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0006/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""hostAliases"", 0, ""ip""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0007/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0007/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""initContainer\"", \""env\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-05-0007/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0007/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0008/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""userOperatorContainer\"", \""env\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""startupProbe\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: spec.template.spec.containers[0].startupProbe.successThreshold: Invalid value: 4: must be 1. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.containers[0].startupProbe.successThreshold, message=Invalid value: 4: must be 1, reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: spec.template.spec.containers[0].startupProbe.successThreshold: Invalid value: 4: must be 1, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0008/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0006,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""startupProbe\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksExpirySeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: jwksExpirySeconds' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksExpirySeconds""]",None,
testrun-strimzi-new/trial-05-0008/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0008/0009,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksExpirySeconds\""]"", ""testcase"": ""integer-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: jwksExpirySeconds' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksExpirySeconds""]",None,
testrun-strimzi-new/trial-05-0008/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0009/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0009/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafka"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""nodeAffinityPolicy""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0010/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0010/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0011/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0011/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev={}, curr='NotPresent', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""labelSelector"", ""matchLabels""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0012/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0012/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0012/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0012/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-pop""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev={}, curr='NotPresent', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""labelSelector"", ""matchLabels""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0013/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0013/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0013/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""schedulerName\""]"", ""testcase"": ""string-deletion""}",True,,"message='deployment: test-cluster-entity-operator replicas [1] ready_replicas [None], test-cluster-entity-operator condition [Available] status [False] message [Deployment does not have minimum availability.]'",,,None,
testrun-strimzi-new/trial-05-0014/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0014/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""schedulerName\""]"", ""testcase"": ""string-change""}",True,,"message='deployment: test-cluster-entity-operator replicas [1] ready_replicas [None], test-cluster-entity-operator condition [Available] status [False] message [Deployment does not have minimum availability.]'",,,None,
testrun-strimzi-new/trial-05-0015/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0015/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""schedulerName\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0015/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0015/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0016/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0016/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0016/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0017/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0017/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0017/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0017/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0017/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0017/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0017/0006,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0017/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""cruiseControl"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""podAffinityTerm"", ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0018/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0018/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure class because it is not an Ingress or LoadBalancer based listener, listener plain cannot configure ipFamilies because it is internal listener, listener plain cannot configure finalizers because it is not LoadBalancer based listener, listener plain cannot configure ipFamilyPolicy because it is internal listener, listener plain cannot configure loadBalancerSourceRanges because it is not LoadBalancer based listener, listener plain cannot configure brokers[].nodePort because it is not NodePort based listener, listener plain cannot configure custom TLS certificate with disabled TLS encryption, listener plain cannot configure externalTrafficPolicy because it is not LoadBalancer or NodePort based listener, listener plain cannot configure brokers[].host because it is not Route or Ingress based listener, listener plain cannot configure preferredAddressType because it is not NodePort based listener, listener plain cannot configure brokers[].loadBalancerIP because it is not LoadBalancer based listener, listener plain cannot configure bootstrap.host because it is not Route or Ingress based listener]' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0018/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0018/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0018/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].matchLabelKeys: Forbidden: must not be specified when labelSelector is not set]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].matchLabelKeys, message=Forbidden: must not be specified when labelSelector is not set, reason=FieldValueForbidden, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].matchLabelKeys: Forbidden: must not be specified when labelSelector is not set], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0018/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0018/0006,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\"", 0]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].matchLabelKeys: Forbidden: must not be specified when labelSelector is not set]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].matchLabelKeys, message=Forbidden: must not be specified when labelSelector is not set, reason=FieldValueForbidden, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].matchLabelKeys: Forbidden: must not be specified when labelSelector is not set], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0018/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0019/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0019/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""persistentVolumeClaim\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0019/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0019/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0020/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0020/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0020/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0020/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""jmxTrans"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0021/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0021/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""zookeeperContainer\"", \""env\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0021/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""zookeeperContainer\"", \""env\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0021/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""zookeeperContainer\"", \""env\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0021/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""zookeeperContainer\"", \""env\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0021/0005,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""securityContext\""]"", ""testcase"": ""k8s-bad_security_context""}",True,message='Pod test-cluster-zookeeper-0 crashed',,,,None,
testrun-strimzi-new/trial-05-0022/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0022/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""securityContext\""]"", ""testcase"": ""k8s-root_security_context""}",False,,,,,None,
testrun-strimzi-new/trial-05-0023/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0023/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0023/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0023/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0023/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0023/0005,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0023/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0024/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""imagePullSecrets\"", 0, \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""tlsTrustedCertificates\"", 0, \""certificate\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0024/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""tlsTrustedCertificates\"", 0, \""certificate\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""tlsTrustedCertificates"", 0, ""certificate""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0025/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0025/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""tlsTrustedCertificates\"", 0, \""certificate\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: tlsTrustedCertificates' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""type""]",None,
testrun-strimzi-new/trial-05-0025/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0026/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0026/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""tmpDirSizeLimit\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0026/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0026/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0026/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""nodeAffinityPolicy""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0027/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0027/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0027/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0027/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0027/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""grantsRefreshPoolSize\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0027/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""grantsRefreshPoolSize\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0027/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0027/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""grantsRefreshPoolSize\""]"", ""testcase"": ""integer-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=3, curr=5, path=[""spec"", ""kafka"", ""authorization"", ""grantsRefreshPoolSize""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0028/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0028/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""clusterCaCert\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0028/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0028/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0029/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""labelSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0006,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""serviceAccount\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0029/0009,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0030/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0030/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0030/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0031/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0031/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""serviceAccount\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0031/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0031/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0031/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0031/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0031/0006,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0031/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0032/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0032/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""brokers\"", 0, \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0032/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0032/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=1, curr=0, path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""maxSkew""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0033/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0033/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0033/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""maxSkew\""]"", ""testcase"": ""integer-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=2, curr=4, path=[""spec"", ""zookeeper"", ""template"", ""pod"", ""topologySpreadConstraints"", 0, ""maxSkew""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0034/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0034/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",True,,message='pod: test-cluster-zookeeper-0',,,None,
testrun-strimzi-new/trial-05-0035/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0036/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0036/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""jvmOptions\"", \""javaSystemProperties\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""jvmOptions\"", \""javaSystemProperties\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""superUsers\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""superUsers\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""superUsers\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""superUsers\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0007,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[4].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0036/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0009,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0036/0010,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-push""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-kafka-exporter. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0036/0011,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0037/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0037/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-pop""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[3].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-05-0037/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0037/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0038/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0038/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""deployment\"", \""deploymentStrategy\""]"", ""testcase"": ""RollingUpdate""}",False,,,,,None,
testrun-strimzi-new/trial-05-0038/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""deployment\"", \""deploymentStrategy\""]"", ""testcase"": ""Recreate""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='RollingUpdate', curr='Recreate', path=[""spec"", ""entityOperator"", ""template"", ""deployment"", ""deploymentStrategy""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0039/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0039/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""jmxSecret\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0039/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""config\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-05-0039/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0039/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0039/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""secretName\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0039/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""secretName\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""clientSecret"", ""secretName""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0040/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0040/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""secretName\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0040/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""secretName\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0041/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""livenessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""livenessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""livenessProbe\"", \""timeoutSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""livenessProbe\"", \""timeoutSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0006,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""livenessProbe\"", \""timeoutSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""livenessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0041/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0041/0009,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""livenessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0041/0010,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0042/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0042/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0042/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0042/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-05-0042/0004,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""imagePullSecrets\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-05-0042/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""version\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Unsupported Kafka.spec.kafka.version: . Supported versions are: [3.5.0, 3.5.1, 3.6.0]' responsible_property=[""spec"", ""kafka"", ""version""]",None,
testrun-strimzi-new/trial-05-0042/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0043/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0044/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0044/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""emerg""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0044/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0045/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0045/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""alert""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0045/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0046/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0046/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""crit""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0046/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0047/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0047/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""err""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0047/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0048/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0048/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""warning""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0048/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0049/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0049/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""notice""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0049/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0050/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0050/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""info""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0050/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0051/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0051/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""tlsSidecar\"", \""logLevel\""]"", ""testcase"": ""debug""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-05-0051/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0052/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0052/0001,"{""field"": ""[\""status\"", \""clusterId\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0052/0002,"{""field"": ""[\""status\"", \""clusterId\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""status"", ""clusterId""]) system_state_diff=None",None,
testrun-strimzi-new/trial-05-0053/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0053/0001,"{""field"": ""[\""status\"", \""clusterId\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0053/0002,"{""field"": ""[\""status\"", \""clusterId\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0054/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""minDomains\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""minDomains\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""minDomains\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""podSet\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""podSet\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-05-0054/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""supportsAdminApi\""]"", ""testcase"": ""boolean-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: supportsAdminApi' responsible_property=[""spec"", ""kafka"", ""authorization"", ""supportsAdminApi""]",None,
testrun-strimzi-new/trial-05-0054/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0055/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0055/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""supportsAdminApi\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: supportsAdminApi' responsible_property=[""spec"", ""kafka"", ""authorization"", ""supportsAdminApi""]",None,
testrun-strimzi-new/trial-05-0055/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0055/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""supportsAdminApi\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: supportsAdminApi' responsible_property=[""spec"", ""kafka"", ""authorization"", ""supportsAdminApi""]",None,
testrun-strimzi-new/trial-05-0055/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-05-0056/0000,{},False,,,,,None,
testrun-strimzi-new/trial-05-0056/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0000/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""ipFamilyPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure ipFamilyPolicy because it is internal listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0000/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0000/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""ipFamilyPolicy\""]"", ""testcase"": ""SingleStack""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure ipFamilyPolicy because it is internal listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0000/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0001/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""ipFamilyPolicy\""]"", ""testcase"": ""PreferDualStack""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure ipFamilyPolicy because it is internal listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0001/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0002/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""ipFamilyPolicy\""]"", ""testcase"": ""RequireDualStack""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure ipFamilyPolicy because it is internal listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0002/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0003/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0003/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='', path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""podAffinityTerm"", ""topologyKey""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0004/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0004/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0004/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0004/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0004/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0004/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0005/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0005/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0005/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0005/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0007/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""resources\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0007/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0007/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0007/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0007/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0007/0006,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0007/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0008/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""entityOperatorRole\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0008/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""deployment\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0008/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0008/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""deployment\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0008/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0009/0000,{},True,,message='pod: test-cluster-entity-operator-6f85fc8b69-mbz5r container [topic-operator] restart_count [1]',,,None,
testrun-strimzi-new/trial-06-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0010/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0010/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0011/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeAffinityPolicy\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0011/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""externalBootstrapIngress\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0011/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0011/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0011/0005,"{""field"": ""[\""status\"", \""observedGeneration\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0011/0006,"{""field"": ""[\""status\"", \""observedGeneration\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=2, curr=0, path=[""status"", ""observedGeneration""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0012/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0012/0001,"{""field"": ""[\""status\"", \""observedGeneration\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0012/0002,"{""field"": ""[\""status\"", \""observedGeneration\""]"", ""testcase"": ""integer-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=2, curr=4, path=[""status"", ""observedGeneration""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0013/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0013/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0013/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0013/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0013/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0013/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0013/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0014/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0015/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0015/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""metadata\"", \""annotations\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0015/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""secrets\"", 0, \""key\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0015/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""secrets\"", 0, \""key\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0015/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""secrets\"", 0, \""key\""]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0015/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""secrets\"", 0, \""key\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0015/0006,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0015/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0015/0008,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0015/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0016/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0016/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""initialCacheCapacity\""]"", ""testcase"": ""integer-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: initialCacheCapacity' responsible_property=[""spec"", ""kafka"", ""authorization"", ""initialCacheCapacity""]",None,
testrun-strimzi-new/trial-06-0016/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0016/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""initialCacheCapacity\""]"", ""testcase"": ""integer-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: initialCacheCapacity' responsible_property=[""spec"", ""kafka"", ""authorization"", ""initialCacheCapacity""]",None,
testrun-strimzi-new/trial-06-0016/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0016/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0016/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0016/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0016/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0017/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0017/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\"", 0]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].matchLabelKeys: Forbidden: must not be specified when labelSelector is not set, spec.template.spec.topologySpreadConstraints[0].matchLabelKeys[0]: Invalid value: """": name part must be non-empty, spec.template.spec.topologySpreadConstraints[0].matchLabelKeys[0]: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].matchLabelKeys, message=Forbidden: must not be specified when labelSelector is not set, reason=FieldValueForbidden, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].matchLabelKeys[0], message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].matchLabelKeys[0], message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].matchLabelKeys: Forbidden: must not be specified when labelSelector is not set, spec.template.spec.topologySpreadConstraints[0].matchLabelKeys[0]: Invalid value: """": name part must be non-empty, spec.template.spec.topologySpreadConstraints[0].matchLabelKeys[0]: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0017/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0018/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0018/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0018/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0019/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0019/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0019/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0019/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-push""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0019/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0019/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-pop""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0019/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0019/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""resources\"", \""claims\""]"", ""testcase"": ""array-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0019/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0020/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0020/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""networkPolicyPeers\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/networking.k8s.io/v1/namespaces/kafka/networkpolicies/test-cluster-network-policy-kafka. Message: NetworkPolicy.networking.k8s.io ""test-cluster-network-policy-kafka"" is invalid: [spec.ingress[3].from[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must be non-empty, spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=networking.k8s.io, kind=NetworkPolicy, name=test-cluster-network-policy-kafka, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=NetworkPolicy.networking.k8s.io ""test-cluster-network-policy-kafka"" is invalid: [spec.ingress[3].from[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must be non-empty, spec.ingress[3].from[0].namespaceSelector.matchExpressions[1].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0020/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0020/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""networkPolicyPeers\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0020/0004,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[2].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespaceSelector.matchExpressions[3].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0020/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0021/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0021/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""securityContext\""]"", ""testcase"": ""k8s-normal_security_context""}",True,message='Pod test-cluster-zookeeper-0 crashed',,,,None,
testrun-strimzi-new/trial-06-0022/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0022/0001,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0022/0002,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0022/0003,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0022/0004,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-06-0022/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0022/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0023/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0023/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0023/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0024/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0024/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""tlsTrustedCertificates\"", 0, \""certificate\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: tlsTrustedCertificates' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""type""]",None,
testrun-strimzi-new/trial-06-0024/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0025/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0025/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""resources\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0025/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""resources\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0025/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0025/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0026/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0026/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, spec.template.spec.hostAliases.hostnames: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.hostAliases.ip, message=Invalid value: ""ACTOKEY"": must be valid IP address, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, spec.template.spec.hostAliases.hostnames: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0026/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0026/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0026/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-push""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, spec.template.spec.hostAliases.hostnames: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.hostAliases.ip, message=Invalid value: ""ACTOKEY"": must be valid IP address, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, spec.template.spec.hostAliases.hostnames: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0026/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0027/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0027/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-pop""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, spec.template.spec.hostAliases.hostnames: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.hostAliases.ip, message=Invalid value: ""ACTOKEY"": must be valid IP address, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.hostAliases.hostnames, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, spec.template.spec.hostAliases.hostnames: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, \'-\' or \'.\', and must start and end with an alphanumeric character (e.g. \'example.com\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0027/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0027/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0027/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\"", \""ipFamilies\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0027/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\"", \""ipFamilies\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0028/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0028/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""resources\"", \""requests\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0028/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0028/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0028/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0028/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0029/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0029/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""storage\"", \""type\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0029/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0029/0003,"{""field"": ""[\""spec\"", \""zookeeper\"", \""storage\"", \""type\""]"", ""testcase"": ""ephemeral""}",False,,,,,None,
testrun-strimzi-new/trial-06-0029/0004,"{""field"": ""[\""spec\"", \""zookeeper\"", \""storage\"", \""type\""]"", ""testcase"": ""persistent-claim""}",False,,,,,None,
testrun-strimzi-new/trial-06-0029/0005,"{""field"": ""[\""status\"", \""listeners\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0029/0006,"{""field"": ""[\""status\"", \""listeners\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0030/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0030/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""tolerations\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0030/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""tolerations\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=4, curr='NotPresent', path=[""spec"", ""kafka"", ""template"", ""pod"", ""tolerations"", 0, ""tolerationSeconds""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0031/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0031/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""tolerations\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0031/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""tolerations\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0031/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""tolerations\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-06-0031/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""metricsConfig\"", \""valueFrom\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0031/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0031/0006,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""metricsConfig\"", \""valueFrom\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0031/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0032/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0032/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""httpRetryPauseMs\""]"", ""testcase"": ""integer-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: httpRetryPauseMs' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""httpRetryPauseMs""]",None,
testrun-strimzi-new/trial-06-0032/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0032/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""httpRetryPauseMs\""]"", ""testcase"": ""integer-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: httpRetryPauseMs' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""httpRetryPauseMs""]",None,
testrun-strimzi-new/trial-06-0032/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0032/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""metricsConfig\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0032/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0032/0007,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""metricsConfig\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0032/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0033/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0033/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-change""}",True,,message='pod: test-cluster-zookeeper-0',,,None,
testrun-strimzi-new/trial-06-0034/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0034/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0034/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""deployment\"", \""deploymentStrategy\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0034/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""deployment\"", \""deploymentStrategy\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0034/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0034/0005,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""deployment\"", \""deploymentStrategy\""]"", ""testcase"": ""RollingUpdate""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='Recreate', curr='RollingUpdate', path=[""spec"", ""kafkaExporter"", ""template"", ""deployment"", ""deploymentStrategy""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0035/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0035/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""deployment\"", \""deploymentStrategy\""]"", ""testcase"": ""Recreate""}",False,,,,,None,
testrun-strimzi-new/trial-06-0035/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-06-0035/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0036/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0036/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\"", \""limits\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0036/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0036/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\"", \""failureThreshold\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0036/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0037/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0037/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[3].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].key, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator, message=Invalid value: ""ACTOKEY"": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[3].operator, message=Invalid value: """": not a valid selector operator, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[0].key: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[1].operator: Invalid value: ""ACTOKEY"": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[2].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].namespaceSelector.matchExpressions[3].operator: Invalid value: """": not a valid selector operator, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0037/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0037/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0037/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0038/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""expireAfterMs\""]"", ""testcase"": ""integer-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: expireAfterMs' responsible_property=[""spec"", ""kafka"", ""authorization"", ""expireAfterMs""]",None,
testrun-strimzi-new/trial-06-0038/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""authorization\"", \""expireAfterMs\""]"", ""testcase"": ""integer-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.authorization with an unknown property: expireAfterMs' responsible_property=[""spec"", ""kafka"", ""authorization"", ""expireAfterMs""]",None,
testrun-strimzi-new/trial-06-0038/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""outputs\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0006,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""outputs\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0007,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""outputs\"", 0]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0008,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""kafkaQueries\"", 0, \""outputs\"", 0]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0009,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0038/0010,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0039/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0039/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0039/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0039/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""matchLabelKeys\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-06-0040/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0040/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""clientSecret\"", \""secretName\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0040/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0040/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=1, curr=0, path=[""spec"", ""entityOperator"", ""userOperator"", ""readinessProbe"", ""initialDelaySeconds""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0041/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0041/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0041/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""userOperator\"", \""readinessProbe\"", \""initialDelaySeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0041/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""loadBalancerIP\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure bootstrap.loadBalancerIP because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0041/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0041/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""loadBalancerIP\""]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure bootstrap.loadBalancerIP because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0041/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0041/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""bootstrap\"", \""loadBalancerIP\""]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Listener configuration is not valid: [listener plain cannot configure bootstrap.loadBalancerIP because it is not LoadBalancer based listener]' responsible_property=[],None,
testrun-strimzi-new/trial-06-0041/0008,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0042/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0042/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0042/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0042/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,,None,
testrun-strimzi-new/trial-06-0042/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0043/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0043/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""version\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Unsupported Kafka.spec.kafka.version: ACTOKEY. Supported versions are: [3.5.0, 3.5.1, 3.6.0]' responsible_property=[""spec"", ""kafka"", ""version""]",None,
testrun-strimzi-new/trial-06-0043/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0044/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0044/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""version\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Unsupported Kafka.spec.kafka.version: . Supported versions are: [3.5.0, 3.5.1, 3.6.0]' responsible_property=[""spec"", ""kafka"", ""version""]",None,
testrun-strimzi-new/trial-06-0044/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0045/0001,"{""field"": ""[\""spec\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0003,"{""field"": ""[\""spec\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0005,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0006,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0007,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0008,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchExpressions\""]"", ""testcase"": ""array-pop""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0009,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-06-0045/0010,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev='ACTOKEY', curr='NotPresent', path=[""spec"", ""kafkaExporter"", ""template"", ""pod"", ""hostAliases"", 0, ""ip""]) system_state_diff=None",None,
testrun-strimzi-new/trial-06-0046/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0046/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-push""}",False,,,,,None,
testrun-strimzi-new/trial-06-0046/0002,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""hostAliases\""]"", ""testcase"": ""array-push""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-kafka-exporter. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.hostAliases.ip, message=Invalid value: ""ACTOKEY"": must be valid IP address, reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.hostAliases.ip: Invalid value: ""ACTOKEY"": must be valid IP address, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0046/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0047/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0048/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0048/0001,"{""field"": ""[\""status\"", \""clusterId\""]"", ""testcase"": ""string-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0048/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksEndpointUri\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: jwksEndpointUri' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksEndpointUri""]",None,
testrun-strimzi-new/trial-06-0048/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0048/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksEndpointUri\""]"", ""testcase"": ""string-change""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-06-0048/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0048/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""jwksEndpointUri\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: jwksEndpointUri' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""jwksEndpointUri""]",None,
testrun-strimzi-new/trial-06-0048/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0049/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0049/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeTaintsPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0049/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0049/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeTaintsPolicy\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: ""ACTOKEY"": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0049/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0049/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""topologySpreadConstraints\"", 0, \""nodeTaintsPolicy\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: """": supported values: ""Honor"", ""Ignore""]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.topologySpreadConstraints[0].maxSkew, message=Invalid value: 0: must be greater than zero, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable, message=Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", reason=FieldValueNotSupported, additionalProperties={}), StatusCause(field=spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy, message=Unsupported value: """": supported values: ""Honor"", ""Ignore"", reason=FieldValueNotSupported, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.topologySpreadConstraints[0].maxSkew: Invalid value: 0: must be greater than zero, spec.template.spec.topologySpreadConstraints[0].topologyKey: Required value: can not be empty, spec.template.spec.topologySpreadConstraints[0].whenUnsatisfiable: Unsupported value: """": supported values: ""DoNotSchedule"", ""ScheduleAnyway"", spec.template.spec.topologySpreadConstraints[0].nodeTaintsPolicy: Unsupported value: """": supported values: ""Honor"", ""Ignore""], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-06-0049/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0050/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0050/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with unknown properties: jwksMinRefreshPauseSeconds, enableECDSA, introspectionEndpointUri, validIssuerUri, validTokenType, listenerConfig, accessTokenIsJwt, fallbackUserNamePrefix, userInfoEndpointUri, fallbackUserNameClaim, tlsTrustedCertificates, checkIssuer, disableTlsHostnameVerification, jwksIgnoreKeyUse, jwksEndpointUri, clientSecret, jwksExpirySeconds, jwksRefreshSeconds, enableOauthBearer, clientId, groupsClaimDelimiter, connectTimeoutSeconds, userNameClaim, httpRetryPauseMs, customClaimCheck, secrets, failFast, groupsClaim, enableMetrics, maxSecondsWithoutReauthentication, tokenEndpointUri, httpRetries, enablePlain, checkAccessTokenType, clientScope, checkAudience' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""accessTokenIsJwt""]",None,
testrun-strimzi-new/trial-06-0050/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0050/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-06-0050/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-06-0051/0000,{},False,,,,,None,
testrun-strimzi-new/trial-06-0051/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""jvmOptions\"", \""gcLoggingEnabled\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,,None,
testrun-strimzi-new/trial-07-0000/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0000/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0000/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=1, curr=0, path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""weight""]) system_state_diff=None",None,
testrun-strimzi-new/trial-07-0001/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0001/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-07-0001/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""weight\""]"", ""testcase"": ""integer-change""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=2, curr=4, path=[""spec"", ""kafka"", ""template"", ""pod"", ""affinity"", ""podAntiAffinity"", ""preferredDuringSchedulingIgnoredDuringExecution"", 0, ""weight""]) system_state_diff=None",None,
testrun-strimzi-new/trial-07-0002/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0002/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""readinessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0002/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""readinessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0002/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0002/0004,"{""field"": ""[\""spec\"", \""entityOperator\"", \""tlsSidecar\"", \""readinessProbe\"", \""periodSeconds\""]"", ""testcase"": ""integer-change""}",False,,,,,None,
testrun-strimzi-new/trial-07-0002/0005,"{""field"": ""[\""spec\"", \""jmxTrans\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-07-0002/0006,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0002/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0003/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0003/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""-Xms\""]"", ""testcase"": ""string-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0003/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0003/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""jvmOptions\"", \""-Xms\""]"", ""testcase"": ""string-change""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0003/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0004/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0004/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""resources\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-07-0004/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""podDisruptionBudget\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0004/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""podDisruptionBudget\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0004/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""labelSelector\"", \""matchLabels\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0004/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0005/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0005/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""livenessProbe\""]"", ""testcase"": ""object-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.containers[0].livenessProbe.successThreshold: Invalid value: 4: must be 1. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.containers[0].livenessProbe.successThreshold, message=Invalid value: 4: must be 1, reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: spec.template.spec.containers[0].livenessProbe.successThreshold: Invalid value: 4: must be 1, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0005/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0005/0003,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""livenessProbe\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-07-0005/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""enablePlain\""]"", ""testcase"": ""boolean-deletion""}",False,,,,"message=""Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or 'checkIssuer' set to 'false']"" responsible_property=[]",None,
testrun-strimzi-new/trial-07-0005/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0005/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""enablePlain\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: enablePlain' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""enablePlain""]",None,
testrun-strimzi-new/trial-07-0005/0007,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0005/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""enablePlain\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: enablePlain' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""enablePlain""]",None,
testrun-strimzi-new/trial-07-0005/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0006/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0007/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0007/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0007/0002,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""namespaceSelector\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0007/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0007/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0007/0005,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-07-0007/0006,"{""field"": ""[\""spec\"", \""clientsCa\"", \""generateSecretOwnerReference\""]"", ""testcase"": ""boolean-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0007/0007,"{""field"": ""[\""spec\"", \""clientsCa\"", \""generateSecretOwnerReference\""]"", ""testcase"": ""boolean-deletion""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""clientsCa"", ""generateSecretOwnerReference""]) system_state_diff=None",None,
testrun-strimzi-new/trial-07-0008/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0008/0001,"{""field"": ""[\""spec\"", \""clientsCa\"", \""generateSecretOwnerReference\""]"", ""testcase"": ""boolean-toggle-off""}",False,,,,,None,
testrun-strimzi-new/trial-07-0008/0002,"{""field"": ""[\""spec\"", \""clientsCa\"", \""generateSecretOwnerReference\""]"", ""testcase"": ""boolean-toggle-off""}",True,,,,"message='Found no matching fields for input' input_diff=Diff(prev=True, curr=False, path=[""spec"", ""clientsCa"", ""generateSecretOwnerReference""]) system_state_diff=None",None,
testrun-strimzi-new/trial-07-0009/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0009/0001,"{""field"": ""[\""spec\"", \""clientsCa\"", \""generateSecretOwnerReference\""]"", ""testcase"": ""boolean-toggle-on""}",False,,,,,None,
testrun-strimzi-new/trial-07-0009/0002,"{""field"": ""[\""spec\"", \""entityOperator\"", \""topicOperator\"", \""logging\"", \""valueFrom\"", \""configMapKeyRef\"", \""name\""]"", ""testcase"": ""invalid-name""}",False,,,,message='Invalid input determined from status message: Logging configuration is invalid: [The key under which the logging configuration is stored in the ConfigMap is missing]' responsible_property=[],None,
testrun-strimzi-new/trial-07-0009/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0010/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0010/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""clientService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0010/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""clientService\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0011/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0011/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAntiAffinity\"", \""requiredDuringSchedulingIgnoredDuringExecution\"", 0, \""topologyKey\""]"", ""testcase"": ""string-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0011/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0012/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0012/0001,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0012/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0012/0003,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: ""ACTOKEY"": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0012/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0012/0005,"{""field"": ""[\""spec\"", \""entityOperator\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaces\"", 0]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments/test-cluster-entity-operator. Message: Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: """": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace, message=Invalid value: """": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-entity-operator, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-entity-operator"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.namespace: Invalid value: """": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or \'-\', and must start and end with an alphanumeric character (e.g. \'my-name\',  or \'123-abc\', regex used for validation is \'[a-z0-9]([-a-z0-9]*[a-z0-9])?\'), spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0012/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0013/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0013/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""bootstrapService\"", \""metadata\"", \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
testrun-strimzi-new/trial-07-0013/0002,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0013/0003,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0013/0004,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0013/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0014/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0014/0001,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""podDisruptionBudget\"", \""metadata\""]"", ""testcase"": ""object-deletion""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0014/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0014/0003,"{""field"": ""[\""spec\"", \""cruiseControl\"", \""template\"", \""podDisruptionBudget\"", \""metadata\""]"", ""testcase"": ""object-empty""}",False,,,,message='Invalid input determined from status message: Kafka kafka/test-cluster has invalid configuration. Cruise Control cannot be deployed with a Kafka cluster which has only one broker. It requires at least two Kafka brokers.' responsible_property=[],None,
testrun-strimzi-new/trial-07-0014/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0015/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0016/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0016/0001,"{""field"": ""[\""spec\"", \""kafkaExporter\"", \""template\"", \""pod\"", \""affinity\"", \""podAffinity\"", \""preferredDuringSchedulingIgnoredDuringExecution\"", 0, \""podAffinityTerm\"", \""namespaceSelector\""]"", ""testcase"": ""object-empty""}",False,,,,"message='Invalid input determined from status message: Failure executing: POST at: https://10.96.0.1:443/apis/apps/v1/namespaces/kafka/deployments. Message: Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')]. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight, message=Invalid value: 0: must be in the range 1-100, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Required value: can not be empty, reason=FieldValueRequired, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must be non-empty, reason=FieldValueInvalid, additionalProperties={}), StatusCause(field=spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey, message=Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\'), reason=FieldValueInvalid, additionalProperties={})], group=apps, kind=Deployment, name=test-cluster-kafka-exporter, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Deployment.apps ""test-cluster-kafka-exporter"" is invalid: [spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight: Invalid value: 0: must be in the range 1-100, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Required value: can not be empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must be non-empty, spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey: Invalid value: """": name part must consist of alphanumeric characters, \'-\', \'_\' or \'.\', and must start and end with an alphanumeric character (e.g. \'MyName\',  or \'my.name\',  or \'123-abc\', regex used for validation is \'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\')], metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0016/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0017/0001,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""serviceAccount\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0002,"{""field"": ""[\""spec\"", \""zookeeper\"", \""template\"", \""serviceAccount\""]"", ""testcase"": ""object-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0004,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""string-deletion""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0005,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0006,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""SingleStack""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0007,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""PreferDualStack""}",False,,,,,None,
testrun-strimzi-new/trial-07-0017/0008,"{""field"": ""[\""spec\"", \""kafka\"", \""template\"", \""brokersService\"", \""ipFamilyPolicy\""]"", ""testcase"": ""RequireDualStack""}",False,,,,"message='Invalid input determined from status message: Failure executing: PATCH at: https://10.96.0.1:443/api/v1/namespaces/kafka/services/test-cluster-kafka-brokers. Message: Service ""test-cluster-kafka-brokers"" is invalid: spec.ipFamilyPolicy: Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services. Received status: Status(apiVersion=v1, code=422, details=StatusDetails(causes=[StatusCause(field=spec.ipFamilyPolicy, message=Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services, reason=FieldValueInvalid, additionalProperties={})], group=null, kind=Service, name=test-cluster-kafka-brokers, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=Service ""test-cluster-kafka-brokers"" is invalid: spec.ipFamilyPolicy: Invalid value: ""RequireDualStack"": this cluster is not configured for dual-stack services, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=Invalid, status=Failure, additionalProperties={}).' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0017/0009,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0018/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0018/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""customClaimCheck\""]"", ""testcase"": ""string-deletion""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: customClaimCheck' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""customClaimCheck""]",None,
testrun-strimzi-new/trial-07-0018/0002,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0018/0003,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""customClaimCheck\""]"", ""testcase"": ""string-change""}",False,,,,"message='Invalid input determined from status message: Resource Kafka(kafka/test-cluster) contains object at path spec.kafka.listeners.auth with an unknown property: customClaimCheck' responsible_property=[""spec"", ""kafka"", ""listeners"", 0, ""authentication"", ""customClaimCheck""]",None,
testrun-strimzi-new/trial-07-0018/0004,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0018/0005,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""authentication\"", \""customClaimCheck\""]"", ""testcase"": ""string-empty""}",False,,,,"message='Invalid input determined from status message: Listener configuration is not valid: [listener plain: Introspection endpoint URI or JWKS endpoint URI has to be specified, listener plain: Valid Issuer URI has to be specified or \'checkIssuer\' set to \'false\', listener plain: \'customClaimCheck\' value not a valid JsonPath filter query - Failed to parse filter query: """"]' responsible_property=[]",None,
testrun-strimzi-new/trial-07-0018/0006,"{""field"": """", ""testcase"": ""revert""}",False,,,,,None,
testrun-strimzi-new/trial-07-0019/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0020/0000,{},False,,,,,None,
testrun-strimzi-new/trial-07-0020/0001,"{""field"": ""[\""spec\"", \""kafka\"", \""listeners\"", 0, \""configuration\"", \""brokers\"", 0, \""labels\""]"", ""testcase"": ""object-empty""}",False,,,,,None,
